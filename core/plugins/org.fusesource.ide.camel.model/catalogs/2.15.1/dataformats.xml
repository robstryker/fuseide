<?xml version="1.0" encoding="UTF-8"?>
<dataformats>
   <dataformat>
      <name>protobuf</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Protobuf</title>
      <description>Camel Components</description>
      <class>org.apache.camel.dataformat.protobuf.ProtobufDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.ProtobufDataFormat</modelJavaType>
      <modelName>protobuf</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-protobuf</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="instanceClass" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Name of class to use when unarmshalling"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>tidyMarkup</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>TidyMarkup</title>
      <description>Camel TagSoup support</description>
      <class>org.apache.camel.dataformat.tagsoup.TidyMarkupDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.TidyMarkupDataFormat</modelJavaType>
      <modelName>tidyMarkup</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-tagsoup</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="dataObjectType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="What data type to unmarshal as can either be org.w3c.dom.Node or java.lang.String. Is by default org.w3c.dom.Node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>string</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>String Encoding</title>
      <description>The Core Camel Java DSL based router</description>
      <class>org.apache.camel.impl.StringDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.StringDataFormat</modelJavaType>
      <modelName>string</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="charset" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets an encoding to use. Will by default use the JVM platform default charset."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>csv</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>CSV</title>
      <description>Camel CSV data format support</description>
      <class>org.apache.camel.dataformat.csv.CsvDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.CsvDataFormat</modelJavaType>
      <modelName>csv</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-csv</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="nullStringDisabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Used to disable null strings"/>
         <parameter name="escapeDisabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Use for disabling using escape character"/>
         <parameter name="commentMarker" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the comment marker of the reference format."/>
         <parameter name="formatRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="The reference format to use it will be updated with the other format options the default value is CSVFormat.DEFAULT"/>
         <parameter name="formatName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="The name of the format to use the default value is CSVFormat.DEFAULT"/>
         <parameter name="ignoreEmptyLines" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether to ignore empty lines."/>
         <parameter name="recordConverterRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Refers to a custom CsvRecordConverter to lookup from the registry to use."/>
         <parameter name="ignoreSurroundingSpaces" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether to ignore surrounding spaces"/>
         <parameter name="headerDisabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Use for disabling headers"/>
         <parameter name="lazyLoad" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether the unmarshalling should produce an iterator that reads the lines on the fly or if all the lines must be read at one."/>
         <parameter name="commentMarkerDisabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Disables the comment marker of the reference format."/>
         <parameter name="quoteDisabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Used to disable quotes"/>
         <parameter name="skipHeaderRecord" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether to skip the header record in the output"/>
         <parameter name="quote" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the quote which by default is"/>
         <parameter name="useMaps" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether the unmarshalling should produce maps for the lines values instead of lists. It requires to have header (either defined or collected)."/>
         <parameter name="delimiter" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the delimiter to use. The default value is (comma)"/>
         <parameter name="nullString" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the null string"/>
         <parameter name="header" type="array" javaType="java.util.List&lt;java.lang.String&gt;" kind="element" deprecated="false" required="false" description="To configure the CSV headers"/>
         <parameter name="allowMissingColumnNames" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether to allow missing column names."/>
         <parameter name="recordSeparatorDisabled" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Used for disabling record separator"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="escape" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the escape character to use"/>
         <parameter name="recordSeparator" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the record separator (aka new line) which by default is \r\n (CRLF)"/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>base64</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Base64</title>
      <description>Camel Base64 data format support</description>
      <class>org.apache.camel.dataformat.base64.Base64DataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.Base64DataFormat</modelJavaType>
      <modelName>base64</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-base64</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="urlSafe" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Instead of emitting '' and '/' we emit '-' and '_' respectively. urlSafe is only applied to encode operations. Decoding seamlessly handles both modes. Is by default false."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="lineSeparator" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="\r\n" required="false" description="The line separators to use. By default \r\n is used."/>
         <parameter name="lineLength" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" defaultValue="76" required="false" description="To specific a maximum line length for the encoded data. By default 76 is used."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>bindy-csv</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Bindy CSV</title>
      <description>Camel Bindy data format support</description>
      <class>org.apache.camel.dataformat.bindy.csv.BindyCsvDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.BindyDataFormat</modelJavaType>
      <modelName>bindy</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-bindy</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="type" type="string" javaType="org.apache.camel.model.dataformat.BindyType" kind="attribute" choice="Csv,Fixed,KeyValue" deprecated="false" required="true" description="Whether to use csv fixed or key value pairs mode."/>
         <parameter name="packages" type="array" javaType="java.lang.String[]" kind="attribute" deprecated="false" required="false" description="The java package names to scan for model classes."/>
         <parameter name="locale" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="To configure a default locale to use such as us for united states. To use the JVM platform default locale then use the name default"/>
         <parameter name="classType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Name of model class to use."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>syslog</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Syslog</title>
      <description>Camel Syslog support</description>
      <class>org.apache.camel.component.syslog.SyslogDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.SyslogDataFormat</modelJavaType>
      <modelName>syslog</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-syslog</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>jaxb</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>JAXB</title>
      <description>Camel JAXB support</description>
      <class>org.apache.camel.converter.jaxb.JaxbDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.JaxbDataFormat</modelJavaType>
      <modelName>jaxb</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jaxb</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="schema" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="To validate against an existing schema. Your can use the prefix classpath: file: or http: to specify how the resource should by resolved. You can separate multiple schema files by using the '' character."/>
         <parameter name="prettyPrint" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="To enable pretty printing output nicely formatted. Is by default false."/>
         <parameter name="schemaLocation" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="To define the location of the schema"/>
         <parameter name="ignoreJAXBElement" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether to ignore JAXBElement elements - only needed to be set to false in very special use-cases."/>
         <parameter name="contextPath" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" description="Package name where your JAXB classes are located."/>
         <parameter name="xmlStreamWriterWrapper" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="To use a custom xml stream writer."/>
         <parameter name="encoding" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="To overrule and use a specific encoding"/>
         <parameter name="filterNonXmlChars" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="To ignore non xml characheters and replace them with an empty space."/>
         <parameter name="fragment" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="To turn on marshalling XML fragment trees. By default JAXB looks for XmlRootElement annotation on given class to operate on whole XML tree. This is useful but not always - sometimes generated code does not have XmlRootElement annotation sometimes you need unmarshall only part of tree. In that case you can use partial unmarshalling. To enable this behaviours you need set property partClass. Camel will pass this class to JAXB's unmarshaler."/>
         <parameter name="mustBeJAXBElement" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether marhsalling must be java objects with JAXB annotations. And if not then it fails. This option can be set to false to relax that such as when the data is already in XML format."/>
         <parameter name="namespacePrefixRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="When marshalling using JAXB or SOAP then the JAXB implementation will automatic assign namespace prefixes such as ns2 ns3 ns4 etc. To control this mapping Camel allows you to refer to a map which contains the desired mapping."/>
         <parameter name="partClass" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Name of class used for fragment parsing. See more details at the fragment option."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="partNamespace" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="XML namespace to use for fragment parsing. See more details at the fragment option."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>rss</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>RSS</title>
      <description>Camel RSS support</description>
      <class>org.apache.camel.dataformat.rss.RssDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.RssDataFormat</modelJavaType>
      <modelName>rss</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-rss</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>xmlrpc</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>XML RPC</title>
      <description>Camel XML RPC support</description>
      <class>org.apache.camel.dataformat.xmlrpc.XmlRpcDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.XmlRpcDataFormat</modelJavaType>
      <modelName>xmlrpc</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-xmlrpc</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="request" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether to unmarshal request or response Is by default false"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>pgp</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>PGP</title>
      <description>Camel Cryptographic Support</description>
      <class>org.apache.camel.converter.crypto.PGPDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.PGPDataFormat</modelJavaType>
      <modelName>pgp</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-crypto</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="armored" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="This option will cause PGP to base64 encode the encrypted text making it available for copy/paste etc."/>
         <parameter name="signaturePassword" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Password used when opening the private key used for signing (during encryption)."/>
         <parameter name="signatureKeyRing" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Keyring used for signing/verifying as byte array. You can not set the signatureKeyFileName and signatureKeyRing at the same time."/>
         <parameter name="keyFileName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Filename of the keyring; must be accessible as a classpath resource (but you can specify a location in the file system by using the file: prefix)."/>
         <parameter name="signatureVerificationOption" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Controls the behavior for verifying the signature during unmarshaling. There are 4 values possible: optional: The PGP message may or may not contain signatures; if it does contain signatures then a signature verification is executed. required: The PGP message must contain at least one signature; if this is not the case an exception (PGPException) is thrown. A signature verification is executed. ignore: Contained signatures in the PGP message are ignored; no signature verification is executed. no_signature_allowed: The PGP message must not contain a signature; otherwise an exception (PGPException) is thrown."/>
         <parameter name="signatureKeyUserid" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="User ID of the key in the PGP keyring used for signing (during encryption) or signature verification (during decryption). During the signature verification process the specified User ID restricts the public keys from the public keyring which can be used for the verification. If no User ID is specified for the signature verficiation then any public key in the public keyring can be used for the verification. Can also be only a part of a user ID. For example if the user ID is Test User then you can use the part Test User or to address the User ID."/>
         <parameter name="password" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Password used when opening the private key (not used for encryption)."/>
         <parameter name="integrity" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" description="Adds an integrity check/sign into the encryption file. The default value is true."/>
         <parameter name="provider" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Java Cryptography Extension (JCE) provider default is Bouncy Castle (BC). Alternatively you can use for example the IAIK JCE provider; in this case the provider must be registered beforehand and the Bouncy Castle provider must not be registered beforehand. The Sun JCE provider does not work."/>
         <parameter name="keyUserid" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="The user ID of the key in the PGP keyring used during encryption. Can also be only a part of a user ID. For example if the user ID is Test User then you can use the part Test User or to address the user ID."/>
         <parameter name="compressionAlgorithm" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" description="Compression algorithm; possible values are defined in org.bouncycastle.bcpg.CompressionAlgorithmTags; for example 0 (= UNCOMPRESSED) 1 (= ZIP) 2 (= ZLIB) 3 (= BZIP2). Only relevant for encrypting."/>
         <parameter name="signatureKeyFileName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Filename of the keyring to use for signing (during encryption) or for signature verification (during decryption); must be accessible as a classpath resource (but you can specify a location in the file system by using the file: prefix)."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="hashAlgorithm" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" description="Signature hash algorithm; possible values are defined in org.bouncycastle.bcpg.HashAlgorithmTags; for example 2 (= SHA1) 8 (= SHA256) 9 (= SHA384) 10 (= SHA512) 11 (=SHA224). Only relevant for signing."/>
         <parameter name="algorithm" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" description="Symmetric key encryption algorithm; possible values are defined in org.bouncycastle.bcpg.SymmetricKeyAlgorithmTags; for example 2 (= TRIPLE DES) 3 (= CAST5) 4 (= BLOWFISH) 6 (= DES) 7 (= AES_128). Only relevant for encrypting."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>secureXML</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>XML Security</title>
      <description>Camel Partial XML Encryption/Decryption and XML Signature support</description>
      <class>org.apache.camel.dataformat.xmlsecurity.XMLSecurityDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.XMLSecurityDataFormat</modelJavaType>
      <modelName>secureXML</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-xmlsecurity</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="addKeyValueForEncryptedKey" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" description="Whether to add the public key used to encrypt the session key as a KeyValue in the EncryptedKey structure or not."/>
         <parameter name="keyCipherAlgorithm" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="RSA_OAEP" required="false" description="The cipher algorithm to be used for encryption/decryption of the asymmetric key. The available choices are: XMLCipher.RSA_v1dot5 XMLCipher.RSA_OAEP XMLCipher.RSA_OAEP_11 The default value is XMLCipher.RSA_OAEP"/>
         <parameter name="recipientKeyAlias" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="The key alias to be used when retrieving the recipient's public or private key from a KeyStore when performing asymmetric key encryption or decryption."/>
         <parameter name="keyPassword" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="The password to be used for retrieving the private key from the KeyStore. This key is used for asymmetric decryption."/>
         <parameter name="secureTag" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="The XPath reference to the XML Element selected for encryption/decryption. If no tag is specified the entire payload is encrypted/decrypted."/>
         <parameter name="digestAlgorithm" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="SHA1" required="false" description="The digest algorithm to use with the RSA OAEP algorithm. The available choices are: XMLCipher.SHA1 XMLCipher.SHA256 XMLCipher.SHA512 The default value is XMLCipher.SHA1"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="keyOrTrustStoreParametersId" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Refers to a KeyStore instance to lookup in the registry which is used for configuration options for creating and loading a KeyStore instance that represents the sender's trustStore or recipient's keyStore."/>
         <parameter name="xmlCipherAlgorithm" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="TRIPLEDES" required="false" description="The cipher algorithm to be used for encryption/decryption of the XML message content. The available choices are: XMLCipher.TRIPLEDES XMLCipher.AES_128 XMLCipher.AES_128_GCM XMLCipher.AES_192 XMLCipher.AES_192_GCM XMLCipher.AES_256 XMLCipher.AES_256_GCM XMLCipher.SEED_128 XMLCipher.CAMELLIA_128 XMLCipher.CAMELLIA_192 XMLCipher.CAMELLIA_256 The default value is MLCipher.TRIPLEDES"/>
         <parameter name="mgfAlgorithm" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="MGF1_SHA1" required="false" description="The MGF Algorithm to use with the RSA OAEP algorithm. The available choices are: EncryptionConstants.MGF1_SHA1 EncryptionConstants.MGF1_SHA256 EncryptionConstants.MGF1_SHA512 The default value is EncryptionConstants.MGF1_SHA1"/>
         <parameter name="passPhrase" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="A String used as passPhrase to encrypt/decrypt content. The passPhrase has to be provided. If no passPhrase is specified a default passPhrase is used. The passPhrase needs to be put together in conjunction with the appropriate encryption algorithm. For example using TRIPLEDES the passPhase can be a Only another 24 Byte key"/>
         <parameter name="secureTagContents" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="A boolean value to specify whether the XML Element is to be encrypted or the contents of the XML Element false = Element Level true = Element Content Level"/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>barcode</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Barcode</title>
      <description>Camel Barcode (e.g. QRcode, PDF417, DataMatrix) support</description>
      <class>org.apache.camel.dataformat.barcode.BarcodeDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.BarcodeDataFormat</modelJavaType>
      <modelName>barcode</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-barcode</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="barcodeFormat" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Barcode format such as QR-Code"/>
         <parameter name="width" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" description="Width of the barcode"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="imageType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Image type of the barcode such as png"/>
         <parameter name="height" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" description="Height of the barcode"/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>xmlBeans</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>XML Beans</title>
      <description>Camel XMLBeans support</description>
      <class>org.apache.camel.converter.xmlbeans.XmlBeansDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.XMLBeansDataFormat</modelJavaType>
      <modelName>xmlBeans</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-xmlbeans</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="prettyPrint" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="To enable pretty printing output nicely formatted. Is by default false."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>castor</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Castor</title>
      <description>Camel Castor data format support</description>
      <class>org.apache.camel.dataformat.castor.CastorDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.CastorDataFormat</modelJavaType>
      <modelName>castor</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-castor</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="mappingFile" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Path to a Castor mapping file to load from the classpath."/>
         <parameter name="classes" type="array" javaType="java.lang.String[]" kind="attribute" deprecated="false" required="false" description="Add additional class names to Castor XmlContext"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="encoding" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="UTF-8" required="false" description="Encoding to use when marshalling an Object to XML. Is by default UTF-8"/>
         <parameter name="packages" type="array" javaType="java.lang.String[]" kind="attribute" deprecated="false" required="false" description="Add additional packages to Castor XmlContext"/>
         <parameter name="validation" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" description="Whether validation is turned on or off. Is by default true."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>avro</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Avro</title>
      <description>Camel Avro data format</description>
      <class>org.apache.camel.dataformat.avro.AvroDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.AvroDataFormat</modelJavaType>
      <modelName>avro</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-avro</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="instanceClassName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" description="Class name to use for marshal and unmarshalling"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>json-gson</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>JSon GSon</title>
      <description>Camel Gson support</description>
      <class>org.apache.camel.component.gson.GsonDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.JsonDataFormat</modelJavaType>
      <modelName>json</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-gson</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="include" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="If you want to marshal a pojo to JSON and the pojo has some fields with null values. And you want to skip these null values you can set this option to NOT_NULL"/>
         <parameter name="prettyPrint" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="To enable pretty printing output nicely formatted. Is by default false."/>
         <parameter name="unmarshalTypeName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Class name of the java type to use when unarmshalling"/>
         <parameter name="jsonView" type="string" javaType="java.lang.Class&lt;?&gt;" kind="attribute" deprecated="false" required="false" description="When marshalling a POJO to JSON you might want to exclude certain fields from the JSON output. With Jackson you can use JSON views to accomplish this. This option is to refer to the class which has JsonView annotations"/>
         <parameter name="moduleClassNames" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="To use custom Jackson modules com.fasterxml.jackson.databind.Module specified as a String with FQN class names. Multiple classes can be separated by comma."/>
         <parameter name="collectionTypeName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Refers to a custom collection type to lookup in the registry to use. This option should rarely be used but allows to use different collection types than java.util.Collection based as default."/>
         <parameter name="allowJmsType" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Used for JMS users to allow the JMSType header from the JMS spec to specify a FQN classname to use to unmarshal to."/>
         <parameter name="useList" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="To unarmshal to a List of Map or a List of Pojo."/>
         <parameter name="enableFeatures" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Set of features to enable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature com.fasterxml.jackson.databind.DeserializationFeature or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma"/>
         <parameter name="moduleRefs" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="To use custom Jackson modules referred from the Camel registry. Multiple modules can be separated by comma."/>
         <parameter name="disableFeatures" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Set of features to disable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature com.fasterxml.jackson.databind.DeserializationFeature or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma"/>
         <parameter name="library" type="string" javaType="org.apache.camel.model.dataformat.JsonLibrary" kind="attribute" choice="Gson,Jackson,XStream" deprecated="false" defaultValue="XStream" required="false" description="Which json library to use such. Is by default xstream"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="enableJaxbAnnotationModule" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether to enable the JAXB annotations module when using jackson. When enabled then JAXB annotations can be used by Jackson."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>univocity-tsv</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>uniVocity TSV</title>
      <description>Camel UniVocity parsers data format support</description>
      <class>org.apache.camel.dataformat.univocity.UniVocityTsvDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.UniVocityTsvDataFormat</modelJavaType>
      <modelName>univocity-tsv</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-univocity-parsers</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="escapeChar" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="\" required="false" description="The escape character."/>
         <parameter name="skipEmptyLines" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" description="Whether or not the empty lines must be ignored. The default value is true"/>
         <parameter name="headerExtractionEnabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether or not the header must be read in the first line of the test document The default value is false"/>
         <parameter name="asMap" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether the unmarshalling should produce maps for the lines values instead of lists. It requires to have header (either defined or collected). The default value is false"/>
         <parameter name="ignoreLeadingWhitespaces" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" description="Whether or not the leading white spaces must be ignored. The default value is true"/>
         <parameter name="ignoreTrailingWhitespaces" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" description="Whether or not the trailing white spaces must ignored. The default value is true"/>
         <parameter name="lineSeparator" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="The line separator of the files The default value is to use the JVM platform line separator"/>
         <parameter name="nullValue" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="The string representation of a null value. The default value is null"/>
         <parameter name="lazyLoad" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether the unmarshalling should produce an iterator that reads the lines on the fly or if all the lines must be read at one. The default value is false"/>
         <parameter name="normalizedLineSeparator" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="\n" required="false" description="The normalized line separator of the files The default value is \n"/>
         <parameter name="emptyValue" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="The String representation of an empty value"/>
         <parameter name="headersDisabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether or not the headers are disabled. When defined this option explicitly sets the headers as null which indicates that there is no header. The default value is false"/>
         <parameter name="comment" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="#" required="false" description="The comment symbol. The default value is"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="numberOfRecordsToRead" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" description="The maximum number of record to read."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>zip</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Zip Deflate Compression</title>
      <description>The Core Camel Java DSL based router</description>
      <class>org.apache.camel.impl.ZipDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.ZipDataFormat</modelJavaType>
      <modelName>zip</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="compressionLevel" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" defaultValue="-1" required="false" description="To specify a specific compression between 0-9. -1 is default compression 0 is no compression and 9 is best compression."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>beanio</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>BeanIO</title>
      <description>Camel BeanIO data format support</description>
      <class>org.apache.camel.dataformat.beanio.BeanIODataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.BeanioDataFormat</modelJavaType>
      <modelName>beanio</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-beanio</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="mapping" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" description="The BeanIO mapping file. Is by default loaded from the classpath. You can prefix with file: http: or classpath: to denote from where to load the mapping file."/>
         <parameter name="ignoreUnidentifiedRecords" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether to ignore unidentified records."/>
         <parameter name="ignoreUnexpectedRecords" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether to ignore unexpected records."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="encoding" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="The charset to use. Is by default the JVM platform default charset."/>
         <parameter name="streamName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" description="The name of the stream to use."/>
         <parameter name="ignoreInvalidRecords" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether to ignore invalid records."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>zipfile</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Zip File</title>
      <description>Camel Zip file support</description>
      <class>org.apache.camel.dataformat.zipfile.ZipFileDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.ZipFileDataFormat</modelJavaType>
      <modelName>zipFile</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-zipfile</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="usingIterator" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="If the zip file has more then one entry the setting this option to true allows to work with the splitter EIP to split the data using an iterator in a streaming mode."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>jibx</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>JiBX</title>
      <description>Camel Jibx support</description>
      <class>org.apache.camel.dataformat.jibx.JibxDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.JibxDataFormat</modelJavaType>
      <modelName>jibx</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jibx</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="unmarshallClass" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Class name to use when unmarshalling from XML to Java."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="bindingName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="To use a custom binding factory"/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>flatpack</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Flatpack</title>
      <description>Camel FlatPack support</description>
      <class>org.apache.camel.dataformat.flatpack.FlatpackDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.FlatpackDataFormat</modelJavaType>
      <modelName>flatpack</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-flatpack</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="allowShortLines" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Allows for lines to be shorter than expected and ignores the extra characters"/>
         <parameter name="delimiter" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="," required="false" description="The delimiter char (could be ; or similar)"/>
         <parameter name="definition" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="The flatpack pzmap configuration file. Can be omitted in simpler situations but its preferred to use the pzmap."/>
         <parameter name="fixed" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Delimited or fixed. Is by default false = delimited"/>
         <parameter name="ignoreFirstRecord" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" description="Whether the first line is ignored for delimited files (for the column headers). Is by default true."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="parserFactoryRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="References to a custom parser factory to lookup in the registry"/>
         <parameter name="textQualifier" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="&quot;" required="false" description="If the text is qualified with a char such as &quot;"/>
         <parameter name="ignoreExtraColumns" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Allows for lines to be longer than expected and ignores the extra characters."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>bindy-kvp</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Bindy Key Value Pair</title>
      <description>Camel Bindy data format support</description>
      <class>org.apache.camel.dataformat.bindy.kvp.BindyKeyValuePairDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.BindyDataFormat</modelJavaType>
      <modelName>bindy</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-bindy</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="type" type="string" javaType="org.apache.camel.model.dataformat.BindyType" kind="attribute" choice="Csv,Fixed,KeyValue" deprecated="false" required="true" description="Whether to use csv fixed or key value pairs mode."/>
         <parameter name="packages" type="array" javaType="java.lang.String[]" kind="attribute" deprecated="false" required="false" description="The java package names to scan for model classes."/>
         <parameter name="locale" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="To configure a default locale to use such as us for united states. To use the JVM platform default locale then use the name default"/>
         <parameter name="classType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Name of model class to use."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>crypto</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Crypto (Java Cryptographic Extension)</title>
      <description>Camel Cryptographic Support</description>
      <class>org.apache.camel.converter.crypto.CryptoDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.CryptoDataFormat</modelJavaType>
      <modelName>crypto</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-crypto</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="shouldAppendHMAC" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Flag indicating that a Message Authentication Code should be calculated and appended to the encrypted data."/>
         <parameter name="macAlgorithm" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="HmacSHA1" required="false" description="The JCE algorithm name indicating the Message Authentication algorithm."/>
         <parameter name="inline" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Flag indicating that the configured IV should be inlined into the encrypted data stream. Is by default false."/>
         <parameter name="algorithmParameterRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="A JCE AlgorithmParameterSpec used to initialize the Cipher. Will lookup the type using the given name as a java.security.spec.AlgorithmParameterSpec type."/>
         <parameter name="cryptoProvider" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="The name of the JCE Security Provider that should be used."/>
         <parameter name="initVectorRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Refers to a byte array containing the Initialization Vector that will be used to initialize the Cipher."/>
         <parameter name="keyRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Refers to the secret key to lookup from the register to use."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="buffersize" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" description="The size of the buffer used in the signature process."/>
         <parameter name="algorithm" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="DES/CBC/PKCS5Padding" required="false" description="The JCE algorithm name indicating the cryptographic algorithm that will be used. Is by default DES/CBC/PKCS5Padding."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>serialization</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Java Object Serialization</title>
      <description>The Core Camel Java DSL based router</description>
      <class>org.apache.camel.impl.SerializationDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.SerializationDataFormat</modelJavaType>
      <modelName>serialization</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>soapjaxb</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>SOAP</title>
      <description>Camel SOAP support</description>
      <class>org.apache.camel.dataformat.soap.SoapJaxbDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.SoapJaxbDataFormat</modelJavaType>
      <modelName>soapjaxb</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-soap</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="schema" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="To validate against an existing schema. Your can use the prefix classpath: file: or http: to specify how the resource should by resolved. You can separate multiple schema files by using the '' character."/>
         <parameter name="namespacePrefixRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="When marshalling using JAXB or SOAP then the JAXB implementation will automatic assign namespace prefixes such as ns2 ns3 ns4 etc. To control this mapping Camel allows you to refer to a map which contains the desired mapping."/>
         <parameter name="elementNameStrategyRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Refers to an element strategy to lookup from the registry. An element name strategy is used for two purposes. The first is to find a xml element name for a given object and soap action when marshaling the object into a SOAP message. The second is to find an Exception class for a given soap fault name. The following three element strategy class name is provided out of the box. QNameStrategy - Uses a fixed qName that is configured on instantiation. Exception lookup is not supported TypeNameStrategy - Uses the name and namespace from the XMLType annotation of the given type. If no namespace is set then package-info is used. Exception lookup is not supported ServiceInterfaceStrategy - Uses information from a webservice interface to determine the type name and to find the exception class for a SOAP fault All three classes is located in the package name org.apache.camel.dataformat.soap.name If you have generated the web service stub code with cxf-codegen or a similar tool then you probably will want to use the ServiceInterfaceStrategy. In the case you have no annotated service interface you should use QNameStrategy or TypeNameStrategy."/>
         <parameter name="contextPath" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" description="Package name where your JAXB classes are located."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="encoding" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="To overrule and use a specific encoding"/>
         <parameter name="version" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="1.1" required="false" description="SOAP version should either be 1.1 or 1.2. Is by default 1.1"/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>xmljson</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>XML JSon</title>
      <description>Camel XML JSON Data Format</description>
      <class>org.apache.camel.dataformat.xmljson.XmlJsonDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.XmlJsonDataFormat</modelJavaType>
      <modelName>xmljson</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-xmljson</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="expandableProperties" type="array" javaType="java.util.List&lt;java.lang.String&gt;" kind="attribute" deprecated="false" required="false" description="With expandable properties JSON array elements are converted to XML as a sequence of repetitive XML elements with the local name equal to the JSON key for example: number: 123 normally converted to: 123 (where e can be modified by setting elementName) would instead translate to 123 if number is set as an expandable property Used for unmarshalling (JSON to XML conversion)."/>
         <parameter name="forceTopLevelObject" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Determines whether the resulting JSON will start off with a top-most element whose name matches the XML root element. Used for marshalling (XML to JSon conversion). If disabled XML string 12 turns into 'x: '1' 'y': '2' . Otherwise it turns into 'a': 'x: '1' 'y': '2' ."/>
         <parameter name="rootName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Specifies the name of the top-level element. Used for unmarshalling (JSON to XML conversion). If not set json-lib will use arrayName or objectName (default value: 'o' at the current time it is not configurable in this data format). If set to 'root' the JSON string 'x': 'value1' 'y' : 'value2' would turn into value1value2 otherwise the 'root' element would be named 'o'."/>
         <parameter name="removeNamespacePrefixes" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Removes the namespace prefixes from XML qualified elements so that the resulting JSON string does not contain them. Used for marshalling (XML to JSon conversion)."/>
         <parameter name="arrayName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Specifies the name of the top-level XML element. Used for unmarshalling (JSON to XML conversion). For example when converting 1 2 3 it will be output by default as 123. By setting this option or rootName you can alter the name of element 'a'."/>
         <parameter name="encoding" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the encoding. Used for unmarshalling (JSON to XML conversion)."/>
         <parameter name="elementName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Specifies the name of the XML elements representing each array element. Used for unmarshalling (JSON to XML conversion)."/>
         <parameter name="trimSpaces" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Determines whether leading and trailing white spaces will be omitted from String values. Used for marshalling (XML to JSon conversion)."/>
         <parameter name="typeHints" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Adds type hints to the resulting XML to aid conversion back to JSON. Used for unmarshalling (JSON to XML conversion)."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="namespaceLenient" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Flag to be tolerant to incomplete namespace prefixes. Used for unmarshalling (JSON to XML conversion). In most cases json-lib automatically changes this flag at runtime to match the processing."/>
         <parameter name="skipNamespaces" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Signals whether namespaces should be ignored. By default they will be added to the JSON output using xmlns elements. Used for marshalling (XML to JSon conversion)."/>
         <parameter name="skipWhitespace" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Determines whether white spaces between XML elements will be regarded as text values or disregarded. Used for marshalling (XML to JSon conversion)."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>json-jackson</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>JSon Jackson</title>
      <description>Camel Jackson support</description>
      <class>org.apache.camel.component.jackson.JacksonDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.JsonDataFormat</modelJavaType>
      <modelName>json</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jackson</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="include" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="If you want to marshal a pojo to JSON and the pojo has some fields with null values. And you want to skip these null values you can set this option to NOT_NULL"/>
         <parameter name="prettyPrint" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="To enable pretty printing output nicely formatted. Is by default false."/>
         <parameter name="unmarshalTypeName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Class name of the java type to use when unarmshalling"/>
         <parameter name="jsonView" type="string" javaType="java.lang.Class&lt;?&gt;" kind="attribute" deprecated="false" required="false" description="When marshalling a POJO to JSON you might want to exclude certain fields from the JSON output. With Jackson you can use JSON views to accomplish this. This option is to refer to the class which has JsonView annotations"/>
         <parameter name="moduleClassNames" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="To use custom Jackson modules com.fasterxml.jackson.databind.Module specified as a String with FQN class names. Multiple classes can be separated by comma."/>
         <parameter name="collectionTypeName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Refers to a custom collection type to lookup in the registry to use. This option should rarely be used but allows to use different collection types than java.util.Collection based as default."/>
         <parameter name="allowJmsType" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Used for JMS users to allow the JMSType header from the JMS spec to specify a FQN classname to use to unmarshal to."/>
         <parameter name="useList" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="To unarmshal to a List of Map or a List of Pojo."/>
         <parameter name="enableFeatures" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Set of features to enable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature com.fasterxml.jackson.databind.DeserializationFeature or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma"/>
         <parameter name="moduleRefs" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="To use custom Jackson modules referred from the Camel registry. Multiple modules can be separated by comma."/>
         <parameter name="disableFeatures" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Set of features to disable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature com.fasterxml.jackson.databind.DeserializationFeature or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma"/>
         <parameter name="library" type="string" javaType="org.apache.camel.model.dataformat.JsonLibrary" kind="attribute" choice="Gson,Jackson,XStream" deprecated="false" defaultValue="XStream" required="false" description="Which json library to use such. Is by default xstream"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="enableJaxbAnnotationModule" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether to enable the JAXB annotations module when using jackson. When enabled then JAXB annotations can be used by Jackson."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>hl7</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
         <tag>hl7</tag>
      </tags>
      <title>HL7</title>
      <description>Camel HL7 support</description>
      <class>org.apache.camel.component.hl7.HL7DataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.HL7DataFormat</modelJavaType>
      <modelName>hl7</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-hl7</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="validate" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" description="Whether to validate the HL7 message Is by default true."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>univocity-fixed</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>uniVocity Fixed Length</title>
      <description>Camel UniVocity parsers data format support</description>
      <class>org.apache.camel.dataformat.univocity.UniVocityFixedWidthDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.UniVocityFixedWidthDataFormat</modelJavaType>
      <modelName>univocity-fixed</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-univocity-parsers</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="recordEndsOnNewline" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether or not the record ends on new line. The default value is false"/>
         <parameter name="padding" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue=" " required="false" description="The padding character. The default value is a space"/>
         <parameter name="skipEmptyLines" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" description="Whether or not the empty lines must be ignored. The default value is true"/>
         <parameter name="headerExtractionEnabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether or not the header must be read in the first line of the test document The default value is false"/>
         <parameter name="asMap" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether the unmarshalling should produce maps for the lines values instead of lists. It requires to have header (either defined or collected). The default value is false"/>
         <parameter name="ignoreLeadingWhitespaces" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" description="Whether or not the leading white spaces must be ignored. The default value is true"/>
         <parameter name="ignoreTrailingWhitespaces" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" description="Whether or not the trailing white spaces must ignored. The default value is true"/>
         <parameter name="lineSeparator" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="The line separator of the files The default value is to use the JVM platform line separator"/>
         <parameter name="nullValue" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="The string representation of a null value. The default value is null"/>
         <parameter name="lazyLoad" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether the unmarshalling should produce an iterator that reads the lines on the fly or if all the lines must be read at one. The default value is false"/>
         <parameter name="normalizedLineSeparator" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="\n" required="false" description="The normalized line separator of the files The default value is \n"/>
         <parameter name="emptyValue" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="The String representation of an empty value"/>
         <parameter name="headersDisabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether or not the headers are disabled. When defined this option explicitly sets the headers as null which indicates that there is no header. The default value is false"/>
         <parameter name="comment" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="#" required="false" description="The comment symbol. The default value is"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="numberOfRecordsToRead" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" description="The maximum number of record to read."/>
         <parameter name="skipTrailingCharsUntilNewline" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether or not the trailing characters until new line must be ignored. The default value is false"/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>json-xstream</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>JSon XStream</title>
      <description>Camel XStream support</description>
      <class>org.apache.camel.dataformat.xstream.JsonDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.JsonDataFormat</modelJavaType>
      <modelName>json</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-xstream</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="include" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="If you want to marshal a pojo to JSON and the pojo has some fields with null values. And you want to skip these null values you can set this option to NOT_NULL"/>
         <parameter name="prettyPrint" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="To enable pretty printing output nicely formatted. Is by default false."/>
         <parameter name="unmarshalTypeName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Class name of the java type to use when unarmshalling"/>
         <parameter name="jsonView" type="string" javaType="java.lang.Class&lt;?&gt;" kind="attribute" deprecated="false" required="false" description="When marshalling a POJO to JSON you might want to exclude certain fields from the JSON output. With Jackson you can use JSON views to accomplish this. This option is to refer to the class which has JsonView annotations"/>
         <parameter name="moduleClassNames" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="To use custom Jackson modules com.fasterxml.jackson.databind.Module specified as a String with FQN class names. Multiple classes can be separated by comma."/>
         <parameter name="collectionTypeName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Refers to a custom collection type to lookup in the registry to use. This option should rarely be used but allows to use different collection types than java.util.Collection based as default."/>
         <parameter name="allowJmsType" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Used for JMS users to allow the JMSType header from the JMS spec to specify a FQN classname to use to unmarshal to."/>
         <parameter name="useList" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="To unarmshal to a List of Map or a List of Pojo."/>
         <parameter name="enableFeatures" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Set of features to enable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature com.fasterxml.jackson.databind.DeserializationFeature or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma"/>
         <parameter name="moduleRefs" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="To use custom Jackson modules referred from the Camel registry. Multiple modules can be separated by comma."/>
         <parameter name="disableFeatures" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Set of features to disable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature com.fasterxml.jackson.databind.DeserializationFeature or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma"/>
         <parameter name="library" type="string" javaType="org.apache.camel.model.dataformat.JsonLibrary" kind="attribute" choice="Gson,Jackson,XStream" deprecated="false" defaultValue="XStream" required="false" description="Which json library to use such. Is by default xstream"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="enableJaxbAnnotationModule" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether to enable the JAXB annotations module when using jackson. When enabled then JAXB annotations can be used by Jackson."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>univocity-csv</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>uniVocity CSV</title>
      <description>Camel UniVocity parsers data format support</description>
      <class>org.apache.camel.dataformat.univocity.UniVocityCsvDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.UniVocityCsvDataFormat</modelJavaType>
      <modelName>univocity-csv</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-univocity-parsers</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="skipEmptyLines" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" description="Whether or not the empty lines must be ignored. The default value is true"/>
         <parameter name="headerExtractionEnabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether or not the header must be read in the first line of the test document The default value is false"/>
         <parameter name="asMap" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether the unmarshalling should produce maps for the lines values instead of lists. It requires to have header (either defined or collected). The default value is false"/>
         <parameter name="ignoreLeadingWhitespaces" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" description="Whether or not the leading white spaces must be ignored. The default value is true"/>
         <parameter name="ignoreTrailingWhitespaces" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" description="Whether or not the trailing white spaces must ignored. The default value is true"/>
         <parameter name="lineSeparator" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="The line separator of the files The default value is to use the JVM platform line separator"/>
         <parameter name="quoteAllFields" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether or not all values must be quoted when writing them."/>
         <parameter name="nullValue" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="The string representation of a null value. The default value is null"/>
         <parameter name="lazyLoad" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether the unmarshalling should produce an iterator that reads the lines on the fly or if all the lines must be read at one. The default value is false"/>
         <parameter name="normalizedLineSeparator" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="\n" required="false" description="The normalized line separator of the files The default value is \n"/>
         <parameter name="quote" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="&quot;" required="false" description="The quote symbol."/>
         <parameter name="quoteEscape" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="&quot;" required="false" description="The quote escape symbol"/>
         <parameter name="emptyValue" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="The String representation of an empty value"/>
         <parameter name="delimiter" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="," required="false" description="The delimiter of values"/>
         <parameter name="headersDisabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether or not the headers are disabled. When defined this option explicitly sets the headers as null which indicates that there is no header. The default value is false"/>
         <parameter name="comment" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="#" required="false" description="The comment symbol. The default value is"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="numberOfRecordsToRead" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" description="The maximum number of record to read."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>ical</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>iCal</title>
      <description>Camel iCal component</description>
      <class>org.apache.camel.component.ical.ICalDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.IcalDataFormat</modelJavaType>
      <modelName>ical</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-ical</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="validating" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" description="Whether to validate."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>bindy-fixed</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Bindy Fixed Length</title>
      <description>Camel Bindy data format support</description>
      <class>org.apache.camel.dataformat.bindy.fixed.BindyFixedLengthDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.BindyDataFormat</modelJavaType>
      <modelName>bindy</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-bindy</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="type" type="string" javaType="org.apache.camel.model.dataformat.BindyType" kind="attribute" choice="Csv,Fixed,KeyValue" deprecated="false" required="true" description="Whether to use csv fixed or key value pairs mode."/>
         <parameter name="packages" type="array" javaType="java.lang.String[]" kind="attribute" deprecated="false" required="false" description="The java package names to scan for model classes."/>
         <parameter name="locale" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="To configure a default locale to use such as us for united states. To use the JVM platform default locale then use the name default"/>
         <parameter name="classType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Name of model class to use."/>
      </parameters>
   </dataformat>
   <dataformat>
      <name>xstream</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>XStream</title>
      <description>Camel XStream support</description>
      <class>org.apache.camel.dataformat.xstream.XStreamDataFormat</class>
      <kind>dataformat</kind>
      <modelJavaType>org.apache.camel.model.dataformat.XStreamDataFormat</modelJavaType>
      <modelName>xstream</modelName>
      <dependencies>
         <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-xstream</artifactId>
            <version>2.15.1</version>
         </dependency>
      </dependencies>
      <parameters>
         <parameter name="mode" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Mode for dealing with duplicate references The possible values are: NO_REFERENCES ID_REFERENCES XPATH_RELATIVE_REFERENCES XPATH_ABSOLUTE_REFERENCES SINGLE_NODE_XPATH_RELATIVE_REFERENCES SINGLE_NODE_XPATH_ABSOLUTE_REFERENCES"/>
         <parameter name="omitFields" type="object" javaType="java.util.Map&lt;java.lang.String,java.lang.String[]&gt;" kind="element" deprecated="false" required="false" description="Prevents a field from being serialized. To omit a field you must always provide the declaring type and not necessarily the type that is converted."/>
         <parameter name="aliases" type="object" javaType="java.util.Map&lt;java.lang.String,java.lang.String&gt;" kind="element" deprecated="false" required="false" description="Alias a Class to a shorter name to be used in XML elements."/>
         <parameter name="driver" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="To use a custom XStream driver. The instance must be of type com.thoughtworks.xstream.io.HierarchicalStreamDriver"/>
         <parameter name="driverRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="To refer to a custom XStream driver to lookup in the registry. The instance must be of type com.thoughtworks.xstream.io.HierarchicalStreamDriver"/>
         <parameter name="implicitCollections" type="object" javaType="java.util.Map&lt;java.lang.String,java.lang.String[]&gt;" kind="element" deprecated="false" required="false" description="Adds a default implicit collection which is used for any unmapped XML tag."/>
         <parameter name="converters" type="array" javaType="java.util.List&lt;java.lang.String&gt;" kind="element" deprecated="false" required="false" description="List of class names for using custom XStream converters. The classes must be of type com.thoughtworks.xstream.converters.Converter"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the value of the id property."/>
         <parameter name="encoding" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" description="Sets the encoding to use"/>
      </parameters>
   </dataformat>
</dataformats>
