<?xml version="1.0" encoding="UTF-8"?>
<eips>
   <eip>
      <name>idempotentConsumer</name>
      <tags>
         <tag>eip</tag>
         <tag>routing</tag>
      </tags>
      <title>Idempotent Consumer</title>
      <description>Filters out duplicate messages</description>
      <class>org.apache.camel.model.IdempotentConsumerDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="skipDuplicate" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="skipDuplicate" description="Sets whether to skip duplicates or not. The default behavior is to skip duplicates. A duplicate message would have the Exchange property link org.apache.camel.ExchangeDUPLICATE_MESSAGE set to a link BooleanTRUE value. A none duplicate message will not have this property set."/>
         <parameter name="expression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="expression" description="Expression used to calculate the correlation key to use for duplicate check. The Exchange which has the same correlation key is regarded as a duplicate and will be rejected."/>
         <parameter name="eager" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="eager" description="Sets whether to eagerly add the key to the idempotent repository or wait until the exchange is complete. Eager is default enabled."/>
         <parameter name="messageIdRepositoryRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="messageIdRepositoryRef" description="Sets the reference name of the message id repository"/>
         <parameter name="removeOnFailure" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="removeOnFailure" description="Sets whether to remove or keep the key on failure. The default behavior is to remove the key on failure."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>aop</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>Aop</title>
      <description>Does processing before and/or after the route is completed</description>
      <class>org.apache.camel.model.AOPDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="afterUri" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="afterUri" description="Endpoint to call in AOP after. The difference between after and afterFinally is that afterFinally is invoked from a finally block so it will always be invoked no matter what eg also in case of an exception occur."/>
         <parameter name="beforeUri" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="beforeUri" description="Endpoint to call in AOP before."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="afterFinallyUri" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="afterFinallyUri" description="Endpoint to call in AOP after finally. The difference between after and afterFinally is that afterFinally is invoked from a finally block so it will always be invoked no matter what eg also in case of an exception occur."/>
      </parameters>
   </eip>
   <eip>
      <name>customDataFormat</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Custom</title>
      <description>Custom data format</description>
      <class>org.apache.camel.model.dataformat.CustomDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="ref" description="Reference to the custom org.apache.camel.spi.DataFormat to lookup from the Camel registry."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
      </parameters>
   </eip>
   <eip>
      <name>convertBodyTo</name>
      <tags>
         <tag>eip</tag>
         <tag>transformation</tag>
      </tags>
      <title>Convert Body To</title>
      <description>Converts the message body to another type</description>
      <class>org.apache.camel.model.ConvertBodyDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="charset" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="charset" description="To use a specific charset when converting"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="type" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="type" description="The java type to convert to"/>
      </parameters>
   </eip>
   <eip>
      <name>csv</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>CSV</title>
      <description>CSV data format</description>
      <class>org.apache.camel.model.dataformat.CsvDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="nullStringDisabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="nullStringDisabled" description="Used to disable null strings"/>
         <parameter name="escapeDisabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="escapeDisabled" description="Use for disabling using escape character"/>
         <parameter name="commentMarker" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="commentMarker" description="Sets the comment marker of the reference format."/>
         <parameter name="formatRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="formatRef" description="The reference format to use it will be updated with the other format options the default value is CSVFormat.DEFAULT"/>
         <parameter name="formatName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="formatName" description="The name of the format to use the default value is CSVFormat.DEFAULT"/>
         <parameter name="ignoreEmptyLines" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="ignoreEmptyLines" description="Whether to ignore empty lines."/>
         <parameter name="recordConverterRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="recordConverterRef" description="Refers to a custom CsvRecordConverter to lookup from the registry to use."/>
         <parameter name="ignoreSurroundingSpaces" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="ignoreSurroundingSpaces" description="Whether to ignore surrounding spaces"/>
         <parameter name="headerDisabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="headerDisabled" description="Use for disabling headers"/>
         <parameter name="lazyLoad" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="lazyLoad" description="Whether the unmarshalling should produce an iterator that reads the lines on the fly or if all the lines must be read at one."/>
         <parameter name="commentMarkerDisabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="commentMarkerDisabled" description="Disables the comment marker of the reference format."/>
         <parameter name="quoteDisabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="quoteDisabled" description="Used to disable quotes"/>
         <parameter name="skipHeaderRecord" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="skipHeaderRecord" description="Whether to skip the header record in the output"/>
         <parameter name="quote" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="quote" description="Sets the quote which by default is"/>
         <parameter name="useMaps" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="useMaps" description="Whether the unmarshalling should produce maps for the lines values instead of lists. It requires to have header (either defined or collected)."/>
         <parameter name="delimiter" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="delimiter" description="Sets the delimiter to use. The default value is (comma)"/>
         <parameter name="nullString" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="nullString" description="Sets the null string"/>
         <parameter name="header" type="array" javaType="java.util.List&lt;java.lang.String&gt;" kind="element" deprecated="false" required="false" originalFieldName="header" description="To configure the CSV headers"/>
         <parameter name="allowMissingColumnNames" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="allowMissingColumnNames" description="Whether to allow missing column names."/>
         <parameter name="recordSeparatorDisabled" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="recordSeparatorDisabled" description="Used for disabling record separator"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="escape" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="escape" description="Sets the escape character to use"/>
         <parameter name="recordSeparator" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="recordSeparator" description="Sets the record separator (aka new line) which by default is \r\n (CRLF)"/>
      </parameters>
   </eip>
   <eip>
      <name>dataFormats</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Data formats</title>
      <description>To configure data formats</description>
      <class>org.apache.camel.model.dataformat.DataFormatsDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="dataFormats" type="array" javaType="java.util.List&lt;org.apache.camel.model.DataFormatDefinition&gt;" kind="element" oneOf="avro,barcode,base64,beanio,bindy,castor,crypto,csv,custom,flatpack,gzip,hl7,ical,jaxb,jibx,json,pgp,protobuf,rss,secureXML,serialization,soapjaxb,string,syslog,tidyMarkup,univocity-csv,univocity-fixed,univocity-tsv,xmlBeans,xmljson,xmlrpc,xstream,zip,zipFile" deprecated="false" required="true" originalFieldName="dataFormats" description="A list holding the configured data formats"/>
      </parameters>
   </eip>
   <eip>
      <name>recipientList</name>
      <tags>
         <tag>eip</tag>
         <tag>endpoint</tag>
         <tag>routing</tag>
      </tags>
      <title>Recipient List</title>
      <description>Routes messages to a number of dynamically specified recipients (dynamic to)</description>
      <class>org.apache.camel.model.RecipientListDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="strategyMethodAllowNull" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="strategyMethodAllowNull" description="If this option is false then the aggregate method is not used if there was no data to enrich. If this option is true then null values is used as the oldExchange (when no data to enrich) when using POJOs as the AggregationStrategy"/>
         <parameter name="executorServiceRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="executorServiceRef" description="Refers to a custom Thread Pool to be used for parallel processing. Notice if you set this option then parallel processing is automatic implied and you do not have to enable that option as well."/>
         <parameter name="cacheSize" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="cacheSize" description="Sets the maximum size used by the org.apache.camel.impl.ProducerCache which is used to cache and reuse producers when using this recipient list when uris are reused."/>
         <parameter name="expression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="expression" description="Expression that returns which endpoints (url) to send the message to (the recipients). If the expression return an empty value then the message is not sent to any recipients."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="strategyMethodName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="strategyMethodName" description="This option can be used to explicit declare the method name to use when using POJOs as the AggregationStrategy."/>
         <parameter name="timeout" type="integer" javaType="java.lang.Long" kind="attribute" deprecated="false" defaultValue="0" required="false" originalFieldName="timeout" description="Sets a total timeout specified in millis when using parallel processing. If the Recipient List hasn't been able to send and process all replies within the given timeframe then the timeout triggers and the Recipient List breaks out and continues. Notice if you provide a TimeoutAwareAggregationStrategy then the timeout method is invoked before breaking out. If the timeout is reached with running tasks still remaining certain tasks for which it is difficult for Camel to shut down in a graceful manner may continue to run. So use this option with a bit of care."/>
         <parameter name="onPrepareRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="onPrepareRef" description="Uses the Processor when preparing the org.apache.camel.Exchange to be send. This can be used to deep-clone messages that should be send or any custom logic needed before the exchange is send."/>
         <parameter name="ignoreInvalidEndpoints" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="ignoreInvalidEndpoints" description="Ignore the invalidate endpoint exception when try to create a producer with that endpoint"/>
         <parameter name="streaming" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="streaming" description="If enabled then Camel will process replies out-of-order eg in the order they come back. If disabled Camel will process replies in the same order as defined by the recipient list."/>
         <parameter name="stopOnException" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="stopOnException" description="Will now stop further processing if an exception or failure occurred during processing of an org.apache.camel.Exchange and the caused exception will be thrown. Will also stop if processing the exchange failed (has a fault message) or an exception was thrown and handled by the error handler (such as using onException). In all situations the recipient list will stop further processing. This is the same behavior as in pipeline which is used by the routing engine. The default behavior is to not stop but continue processing till the end"/>
         <parameter name="delimiter" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="," required="false" originalFieldName="delimiter" description="Delimiter used if the Expression returned multiple endpoints. Can be turned off using the value false. The default value is"/>
         <parameter name="parallelProcessing" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="parallelProcessing" description="If enabled then sending messages to the recipients occurs concurrently. Note the caller thread will still wait until all messages has been fully processed before it continues. Its only the sending and processing the replies from the recipients which happens concurrently."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="parallelAggregate" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="parallelAggregate" description="If enabled then the aggregate method on AggregationStrategy can be called concurrently. Notice that this would require the implementation of AggregationStrategy to be implemented as thread-safe. By default this is false meaning that Camel synchronizes the call to the aggregate method. Though in some use-cases this can be used to archive higher performance when the AggregationStrategy is implemented as thread-safe."/>
         <parameter name="strategyRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="strategyRef" description="Sets a reference to the AggregationStrategy to be used to assemble the replies from the recipients into a single outgoing message from the RecipientList. By default Camel will use the last reply as the outgoing message. You can also use a POJO as the AggregationStrategy"/>
         <parameter name="shareUnitOfWork" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="shareUnitOfWork" description="Shares the org.apache.camel.spi.UnitOfWork with the parent and each of the sub messages. Recipient List will by default not share unit of work between the parent exchange and each recipient exchange. This means each sub exchange has its own individual unit of work."/>
      </parameters>
   </eip>
   <eip>
      <name>when</name>
      <tags>
         <tag>eip</tag>
         <tag>routing</tag>
      </tags>
      <title>When</title>
      <description>Triggers a route when an expression evaluates to true</description>
      <class>org.apache.camel.model.WhenDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="expression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="expression" description="Expression used as the predicate to evaluate whether this when should trigger and route the message or not."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>zipFile</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Zip File</title>
      <description>zip-file data format</description>
      <class>org.apache.camel.model.dataformat.ZipFileDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="usingIterator" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="usingIterator" description="If the zip file has more then one entry the setting this option to true allows to work with the splitter EIP to split the data using an iterator in a streaming mode."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
      </parameters>
   </eip>
   <eip>
      <name>put</name>
      <tags>
         <tag>rest</tag>
      </tags>
      <title>Put</title>
      <description>Rest PUT command</description>
      <class>org.apache.camel.model.rest.PutVerbDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="enableCORS" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="enableCORS" description="Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false."/>
         <parameter name="method" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="method" description="The HTTP verb such as GET or POST"/>
         <parameter name="bindingMode" type="string" javaType="org.apache.camel.model.rest.RestBindingMode" kind="attribute" choice="auto,json,json_xml,off,xml" deprecated="false" defaultValue="auto" required="false" originalFieldName="bindingMode" description="Sets the binding mode to use. This option will override what may be configured on a parent level The default value is auto"/>
         <parameter name="skipBindingOnErrorCode" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="skipBindingOnErrorCode" description="Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc as success messages otherwise will do. This option will override what may be configured on a parent level"/>
         <parameter name="produces" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="produces" description="To define the content type what the REST service produces (uses for output) such as application/xml or application/json This option will override what may be configured on a parent level"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="toOrRoute" type="object" javaType="org.apache.camel.model.OptionalIdentifiedDefinition&lt;?&gt;" kind="element" oneOf="route,to" deprecated="false" required="true" originalFieldName="toOrRoute" description="To route from this REST service to a Camel endpoint or an inlined route"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="type" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="type" description="Sets the class name to use for binding from input to POJO for the incoming data This option will override what may be configured on a parent level"/>
         <parameter name="uri" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="uri" description="Uri template of this REST service such as /id."/>
         <parameter name="outType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="outType" description="Sets the class name to use for binding from POJO to output for the outgoing data This option will override what may be configured on a parent level"/>
         <parameter name="consumes" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="consumes" description="To define the content type what the REST service consumes (accept as input) such as application/xml or application/json. This option will override what may be configured on a parent level"/>
      </parameters>
   </eip>
   <eip>
      <name>setHeader</name>
      <tags>
         <tag>eip</tag>
         <tag>transformation</tag>
      </tags>
      <title>Set Header</title>
      <description>Sets the value of a message header</description>
      <class>org.apache.camel.model.SetHeaderDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="headerName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="headerName" description="Name of message header to set a new value"/>
         <parameter name="expression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="expression" description="Expression to return the value of the header"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>inOnly</name>
      <tags>
         <tag>eip</tag>
         <tag>endpoint</tag>
         <tag>routing</tag>
      </tags>
      <title>In Only</title>
      <description>Marks the exchange pattern for the route to one way</description>
      <class>org.apache.camel.model.InOnlyDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="true" required="false" originalFieldName="ref" description="Sets the reference of the endpoint to send to."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="uri" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="uri" description="Sets the uri of the endpoint to send to."/>
      </parameters>
   </eip>
   <eip>
      <name>contextScan</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>Context Scan</title>
      <description>Scans for Java org.apache.camel.builder.RouteBuilder instances in the context org.apache.camel.spi.Registry.</description>
      <class>org.apache.camel.model.ContextScanDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="excludes" type="array" javaType="java.util.List&lt;java.lang.String&gt;" kind="element" deprecated="false" required="false" originalFieldName="excludes" description="Exclude finding route builder from these java package names."/>
         <parameter name="includes" type="array" javaType="java.util.List&lt;java.lang.String&gt;" kind="element" deprecated="false" required="false" originalFieldName="includes" description="Include finding route builder from these java package names."/>
      </parameters>
   </eip>
   <eip>
      <name>inOut</name>
      <tags>
         <tag>eip</tag>
         <tag>endpoint</tag>
         <tag>routing</tag>
      </tags>
      <title>In Out</title>
      <description>Marks the exchange pattern for the route to request/reply</description>
      <class>org.apache.camel.model.InOutDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="true" required="false" originalFieldName="ref" description="Sets the reference of the endpoint to send to."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="uri" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="uri" description="Sets the uri of the endpoint to send to."/>
      </parameters>
   </eip>
   <eip>
      <name>routeContextRef</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>Route Context Ref</title>
      <description>To refer to an XML file with routes defined using the xml-dsl</description>
      <class>org.apache.camel.model.RouteContextRefDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="ref" description="Reference to the routes in the xml dsl"/>
      </parameters>
   </eip>
   <eip>
      <name>interceptSendToEndpoint</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>Intercept Send To Endpoint</title>
      <description>Intercepts messages being sent to an endpoint</description>
      <class>org.apache.camel.model.InterceptSendToEndpointDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="uri" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="uri" description="Intercept sending to the uri or uri pattern."/>
         <parameter name="skipSendToOriginalEndpoint" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="skipSendToOriginalEndpoint" description="If set to true then the message is not sent to the original endpoint. By default (false) the message is both intercepted and then sent to the original endpoint."/>
      </parameters>
   </eip>
   <eip>
      <name>setExchangePattern</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>Set Exchange Pattern</title>
      <description>Sets the exchange pattern on the message exchange</description>
      <class>org.apache.camel.model.SetExchangePatternDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="pattern" type="string" javaType="org.apache.camel.ExchangePattern" kind="attribute" choice="InOnly,InOptionalOut,InOut,OutIn,OutOnly,OutOptionalIn,RobustInOnly,RobustOutOnly" deprecated="false" required="true" originalFieldName="pattern" description="Sets the new exchange pattern of the Exchange to be used from this point forward"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>property</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>Property</title>
      <description>A key value pair</description>
      <class>org.apache.camel.model.PropertyDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="value" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="value" description="Property value"/>
         <parameter name="key" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="key" description="Property key"/>
      </parameters>
   </eip>
   <eip>
      <name>vtdxml</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>VtdXML</title>
      <description>For VTD-XML (fast and efficient XPath) expressions and predicates</description>
      <class>org.apache.camel.model.language.VtdXmlExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>castor</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Castor</title>
      <description>Castor data format</description>
      <class>org.apache.camel.model.dataformat.CastorDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="mappingFile" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="mappingFile" description="Path to a Castor mapping file to load from the classpath."/>
         <parameter name="classes" type="array" javaType="java.lang.String[]" kind="attribute" deprecated="false" required="false" originalFieldName="classes" description="Add additional class names to Castor XmlContext"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="encoding" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="UTF-8" required="false" originalFieldName="encoding" description="Encoding to use when marshalling an Object to XML. Is by default UTF-8"/>
         <parameter name="packages" type="array" javaType="java.lang.String[]" kind="attribute" deprecated="false" required="false" originalFieldName="packages" description="Add additional packages to Castor XmlContext"/>
         <parameter name="validation" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="validation" description="Whether validation is turned on or off. Is by default true."/>
      </parameters>
   </eip>
   <eip>
      <name>avro</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Avro</title>
      <description>Avro data format</description>
      <class>org.apache.camel.model.dataformat.AvroDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="instanceClassName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="instanceClassName" description="Class name to use for marshal and unmarshalling"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
      </parameters>
   </eip>
   <eip>
      <name>zip</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Zip Deflate Compression</title>
      <description>zip data format (not for zip files)</description>
      <class>org.apache.camel.model.dataformat.ZipDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="compressionLevel" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" defaultValue="-1" required="false" originalFieldName="compressionLevel" description="To specify a specific compression between 0-9. -1 is default compression 0 is no compression and 9 is best compression."/>
      </parameters>
   </eip>
   <eip>
      <name>beanio</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>BeanIO</title>
      <description>BeanIO data format</description>
      <class>org.apache.camel.model.dataformat.BeanioDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="mapping" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="mapping" description="The BeanIO mapping file. Is by default loaded from the classpath. You can prefix with file: http: or classpath: to denote from where to load the mapping file."/>
         <parameter name="ignoreUnidentifiedRecords" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="ignoreUnidentifiedRecords" description="Whether to ignore unidentified records."/>
         <parameter name="ignoreUnexpectedRecords" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="ignoreUnexpectedRecords" description="Whether to ignore unexpected records."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="encoding" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="encoding" description="The charset to use. Is by default the JVM platform default charset."/>
         <parameter name="streamName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="streamName" description="The name of the stream to use."/>
         <parameter name="ignoreInvalidRecords" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="ignoreInvalidRecords" description="Whether to ignore invalid records."/>
      </parameters>
   </eip>
   <eip>
      <name>python</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>Python</title>
      <description>For Python expressions and predicates</description>
      <class>org.apache.camel.model.language.PythonExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>mvel</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>MVEL</title>
      <description>For MVEL expressions and predicates</description>
      <class>org.apache.camel.model.language.MvelExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>method</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>Bean method</title>
      <description>For expressions and predicates using a java bean (aka method call)</description>
      <class>org.apache.camel.model.language.MethodCallExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="ref" description="Reference to bean to lookup in the registry"/>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="method" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="method" description="Name of method to call"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="bean" type="string" javaType="java.lang.String" kind="attribute" deprecated="true" required="false" originalFieldName="bean" description="Either a reference or a class name of the bean to use"/>
         <parameter name="beanType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="beanType" description="Class name of the bean to use"/>
      </parameters>
   </eip>
   <eip>
      <name>javaScript</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>JavaScript</title>
      <description>For JavaScript expressions and predicates</description>
      <class>org.apache.camel.model.language.JavaScriptExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>verb</name>
      <tags>
         <tag>rest</tag>
      </tags>
      <title>Verb</title>
      <description>Rest command</description>
      <class>org.apache.camel.model.rest.VerbDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="enableCORS" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="enableCORS" description="Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false."/>
         <parameter name="method" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="method" description="The HTTP verb such as GET or POST"/>
         <parameter name="bindingMode" type="string" javaType="org.apache.camel.model.rest.RestBindingMode" kind="attribute" choice="auto,json,json_xml,off,xml" deprecated="false" defaultValue="auto" required="false" originalFieldName="bindingMode" description="Sets the binding mode to use. This option will override what may be configured on a parent level The default value is auto"/>
         <parameter name="skipBindingOnErrorCode" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="skipBindingOnErrorCode" description="Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc as success messages otherwise will do. This option will override what may be configured on a parent level"/>
         <parameter name="produces" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="produces" description="To define the content type what the REST service produces (uses for output) such as application/xml or application/json This option will override what may be configured on a parent level"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="toOrRoute" type="object" javaType="org.apache.camel.model.OptionalIdentifiedDefinition&lt;?&gt;" kind="element" oneOf="route,to" deprecated="false" required="true" originalFieldName="toOrRoute" description="To route from this REST service to a Camel endpoint or an inlined route"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="type" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="type" description="Sets the class name to use for binding from input to POJO for the incoming data This option will override what may be configured on a parent level"/>
         <parameter name="uri" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="uri" description="Uri template of this REST service such as /id."/>
         <parameter name="outType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="outType" description="Sets the class name to use for binding from POJO to output for the outgoing data This option will override what may be configured on a parent level"/>
         <parameter name="consumes" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="consumes" description="To define the content type what the REST service consumes (accept as input) such as application/xml or application/json. This option will override what may be configured on a parent level"/>
      </parameters>
   </eip>
   <eip>
      <name>terser</name>
      <tags>
         <tag>language</tag>
         <tag>hl7</tag>
      </tags>
      <title>HL7 Terser</title>
      <description>For HL7 terser expressions and predicates</description>
      <class>org.apache.camel.model.language.TerserExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>optimisticLockRetryPolicy</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>Optimistic Lock Retry Policy</title>
      <description>To configure optimistic locking</description>
      <class>org.apache.camel.model.OptimisticLockRetryPolicyDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="retryDelay" type="integer" javaType="java.lang.Long" kind="attribute" deprecated="false" defaultValue="50" required="false" originalFieldName="retryDelay" description="Sets the delay in millis between retries"/>
         <parameter name="maximumRetries" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="maximumRetries" description="Sets the maximum number of retries"/>
         <parameter name="randomBackOff" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="randomBackOff" description="Enables random backoff"/>
         <parameter name="maximumRetryDelay" type="integer" javaType="java.lang.Long" kind="attribute" deprecated="false" defaultValue="1000" required="false" originalFieldName="maximumRetryDelay" description="Sets the upper value of retry in millis between retries when using exponential or random backoff"/>
         <parameter name="exponentialBackOff" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="exponentialBackOff" description="Enable exponential backoff"/>
      </parameters>
   </eip>
   <eip>
      <name>loadBalance</name>
      <tags>
         <tag>eip</tag>
         <tag>routing</tag>
      </tags>
      <title>Load Balance</title>
      <description>Balances message processing among a number of nodes</description>
      <class>org.apache.camel.model.LoadBalanceDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="true" required="false" originalFieldName="ref" description="To use a custom load balancer. This option is deprecated use the custom load balancer type instead."/>
         <parameter name="loadBalancerType" type="object" javaType="org.apache.camel.model.LoadBalancerDefinition" kind="element" oneOf="circuitBreaker,custom,failover,random,roundRobin,sticky,topic,weighted" deprecated="false" required="true" originalFieldName="loadBalancerType" description="The load balancer to be used"/>
         <parameter name="inheritErrorHandler" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="inheritErrorHandler" description="Sets whether or not to inherit the configured error handler. The default value is true. You can use this to disable using the inherited error handler for a given DSL such as a load balancer where you want to use a custom error handler strategy."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>roundRobin</name>
      <tags>
         <tag>configuration</tag>
         <tag>loadbalance</tag>
      </tags>
      <title>Round Robin</title>
      <description>Round robin load balancer</description>
      <class>org.apache.camel.model.loadbalancer.RoundRobinLoadBalancerDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
      </parameters>
   </eip>
   <eip>
      <name>delay</name>
      <tags>
         <tag>eip</tag>
         <tag>routing</tag>
      </tags>
      <title>Delay</title>
      <description>Delays processing for a specified length of time</description>
      <class>org.apache.camel.model.DelayDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="executorServiceRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="executorServiceRef" description="Refers to a custom Thread Pool if asyncDelay has been enabled."/>
         <parameter name="expression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="expression" description="Expression to define how long time to wait (in millis)"/>
         <parameter name="callerRunsWhenRejected" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="callerRunsWhenRejected" description="Whether or not the caller should run the task when it was rejected by the thread pool. Is by default true"/>
         <parameter name="asyncDelayed" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="asyncDelayed" description="Enables asynchronous delay which means the thread will noy block while delaying."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>groovy</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>Groovy</title>
      <description>For Groovy expressions and predicates</description>
      <class>org.apache.camel.model.language.GroovyExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>route</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>Route</title>
      <description>A Camel route</description>
      <class>org.apache.camel.model.RouteDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description="Outputs are processors that determines how messages are processed by this route."/>
         <parameter name="routePolicyRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="routePolicyRef" description="Reference to custom org.apache.camel.spi.RoutePolicy to use by the route. Multiple policies can be configured by separating values using comma."/>
         <parameter name="handleFault" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="handleFault" description="Whether handle fault is enabled on this route."/>
         <parameter name="inputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.FromDefinition&gt;" kind="element" oneOf="from" deprecated="false" required="true" originalFieldName="inputs" description="Input to the route."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="streamCache" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="streamCache" description="Whether stream caching is enabled on this route."/>
         <parameter name="autoStartup" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="autoStartup" description="Whether to auto start this route"/>
         <parameter name="errorHandlerRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="errorHandlerRef" description="Sets the bean ref name of the error handler builder to use on this route"/>
         <parameter name="trace" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="trace" description="Whether tracing is enabled on this route."/>
         <parameter name="shutdownRoute" type="string" javaType="org.apache.camel.ShutdownRoute" kind="attribute" choice="Default,Defer" deprecated="false" required="false" originalFieldName="shutdownRoute" description="To control how to shutdown the route."/>
         <parameter name="messageHistory" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="messageHistory" description="Whether message history is enabled on this route."/>
         <parameter name="delayer" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="delayer" description="Whether to slow down processing messages by a given delay in msec."/>
         <parameter name="shutdownRunningTask" type="string" javaType="org.apache.camel.ShutdownRunningTask" kind="attribute" choice="CompleteCurrentTaskOnly,CompleteAllTasks" deprecated="false" required="false" originalFieldName="shutdownRunningTask" description="To control how to shutdown the route."/>
         <parameter name="startupOrder" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="startupOrder" description="To configure the ordering of the routes being started"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="group" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="group" description="The group that this route belongs to; could be the name of the RouteBuilder class or be explicitly configured in the XML. May be null."/>
      </parameters>
   </eip>
   <eip>
      <name>stop</name>
      <tags>
         <tag>eip</tag>
         <tag>routing</tag>
      </tags>
      <title>Stop</title>
      <description>Stops the processing of the current message</description>
      <class>org.apache.camel.model.StopDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>exchangeProperty</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>ExchangeProperty</title>
      <description>An expression which extracts the named exchange property</description>
      <class>org.apache.camel.model.language.ExchangePropertyExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>intercept</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>Intercept</title>
      <description>Intercepts a message at each step in the route</description>
      <class>org.apache.camel.model.InterceptDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>whenSkipSendToEndpoint</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>When Skip Send To Endpoint</title>
      <description>Predicate to determine if the message should be sent or not to the endpoint when using interceptSentToEndpoint.</description>
      <class>org.apache.camel.model.WhenSkipSendToEndpointDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="expression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="expression" description="Expression used as the predicate to evaluate whether the message should be sent or not to the endpoint"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>restProperty</name>
      <tags>
         <tag>rest</tag>
      </tags>
      <title>Rest Property</title>
      <description>A key value pair</description>
      <class>org.apache.camel.model.rest.RestPropertyDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="value" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="value" description="Property value"/>
         <parameter name="key" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="key" description="Property key"/>
      </parameters>
   </eip>
   <eip>
      <name>setProperty</name>
      <tags>
         <tag>eip</tag>
         <tag>transformation</tag>
      </tags>
      <title>Set Property</title>
      <description>Sets a named property on the message exchange</description>
      <class>org.apache.camel.model.SetPropertyDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="expression" description="Expression to return the value of the message exchange property"/>
         <parameter name="propertyName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="propertyName" description="Name of exchange property to set a new value"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>sticky</name>
      <tags>
         <tag>configuration</tag>
         <tag>loadbalance</tag>
      </tags>
      <title>Sticky</title>
      <description>Sticky load balancer</description>
      <class>org.apache.camel.model.loadbalancer.StickyLoadBalancerDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="correlationExpression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="correlationExpression" description="The correlation expression to use to calculate the correlation key"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
      </parameters>
   </eip>
   <eip>
      <name>xstream</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>XStream</title>
      <description>xstream data format</description>
      <class>org.apache.camel.model.dataformat.XStreamDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="mode" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="mode" description="Mode for dealing with duplicate references The possible values are: NO_REFERENCES ID_REFERENCES XPATH_RELATIVE_REFERENCES XPATH_ABSOLUTE_REFERENCES SINGLE_NODE_XPATH_RELATIVE_REFERENCES SINGLE_NODE_XPATH_ABSOLUTE_REFERENCES"/>
         <parameter name="omitFields" type="object" javaType="java.util.Map&lt;java.lang.String,java.lang.String[]&gt;" kind="element" deprecated="false" required="false" originalFieldName="omitFields" description="Prevents a field from being serialized. To omit a field you must always provide the declaring type and not necessarily the type that is converted."/>
         <parameter name="aliases" type="object" javaType="java.util.Map&lt;java.lang.String,java.lang.String&gt;" kind="element" deprecated="false" required="false" originalFieldName="aliases" description="Alias a Class to a shorter name to be used in XML elements."/>
         <parameter name="driver" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="driver" description="To use a custom XStream driver. The instance must be of type com.thoughtworks.xstream.io.HierarchicalStreamDriver"/>
         <parameter name="driverRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="driverRef" description="To refer to a custom XStream driver to lookup in the registry. The instance must be of type com.thoughtworks.xstream.io.HierarchicalStreamDriver"/>
         <parameter name="implicitCollections" type="object" javaType="java.util.Map&lt;java.lang.String,java.lang.String[]&gt;" kind="element" deprecated="false" required="false" originalFieldName="implicitCollections" description="Adds a default implicit collection which is used for any unmapped XML tag."/>
         <parameter name="converters" type="array" javaType="java.util.List&lt;java.lang.String&gt;" kind="element" deprecated="false" required="false" originalFieldName="converters" description="List of class names for using custom XStream converters. The classes must be of type com.thoughtworks.xstream.converters.Converter"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="encoding" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="encoding" description="Sets the encoding to use"/>
      </parameters>
   </eip>
   <eip>
      <name>interceptFrom</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>Intercept From</title>
      <description>Intercepts incoming messages</description>
      <class>org.apache.camel.model.InterceptFromDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="uri" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="uri" description="Intercept incoming messages from the uri or uri pattern. If this option is not configured then all incoming messages is intercepted."/>
      </parameters>
   </eip>
   <eip>
      <name>throttle</name>
      <tags>
         <tag>eip</tag>
         <tag>routing</tag>
      </tags>
      <title>Throttle</title>
      <description>Controls the rate at which messages are passed to the next node in the route</description>
      <class>org.apache.camel.model.ThrottleDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="executorServiceRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="executorServiceRef" description="Sets the ExecutorService which could be used by throttle definition"/>
         <parameter name="expression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="expression" description="Expression to configure the maximum number of messages to throttle per request"/>
         <parameter name="callerRunsWhenRejected" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="callerRunsWhenRejected" description="Whether or not the caller should run the task when it was rejected by the thread pool. Is by default true"/>
         <parameter name="timePeriodMillis" type="integer" javaType="java.lang.Long" kind="attribute" deprecated="false" defaultValue="1000" required="false" originalFieldName="timePeriodMillis" description="Sets the time period during which the maximum request count is valid for"/>
         <parameter name="asyncDelayed" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="asyncDelayed" description="Enables asynchronous delay which means the thread will no block while delaying."/>
         <parameter name="rejectExecution" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="rejectExecution" description="Whether or not throttler throws the ThrottlerRejectedExecutionException when the exchange exceeds the request limit Is by default false"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>log</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>Log</title>
      <description>Logs the defined message to the logger</description>
      <class>org.apache.camel.model.LogDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="logName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="logName" description="Sets the name of the logger"/>
         <parameter name="marker" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="marker" description="To use slf4j marker"/>
         <parameter name="loggerRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="loggerRef" description="To refer to a custom logger instance to lookup from the registry."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="message" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="message" description="Sets the log message (uses simple language)"/>
         <parameter name="loggingLevel" type="string" javaType="org.apache.camel.LoggingLevel" kind="attribute" choice="DEBUG,ERROR,INFO,OFF,TRACE,WARN" deprecated="false" defaultValue="INFO" required="false" originalFieldName="loggingLevel" description="Sets the logging level. The default value is INFO"/>
      </parameters>
   </eip>
   <eip>
      <name>bindy</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Bindy</title>
      <description>Bindy data format</description>
      <class>org.apache.camel.model.dataformat.BindyDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="type" type="string" javaType="org.apache.camel.model.dataformat.BindyType" kind="attribute" choice="Csv,Fixed,KeyValue" deprecated="false" required="true" originalFieldName="type" description="Whether to use csv fixed or key value pairs mode."/>
         <parameter name="packages" type="array" javaType="java.lang.String[]" kind="attribute" deprecated="false" required="false" originalFieldName="packages" description="The java package names to scan for model classes."/>
         <parameter name="locale" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="locale" description="To configure a default locale to use such as us for united states. To use the JVM platform default locale then use the name default"/>
         <parameter name="classType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="classType" description="Name of model class to use."/>
      </parameters>
   </eip>
   <eip>
      <name>onException</name>
      <tags>
         <tag>error</tag>
      </tags>
      <title>On Exception</title>
      <description>Route to be executed when an exception is thrown</description>
      <class>org.apache.camel.model.OnExceptionDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="exception" type="array" javaType="java.util.List&lt;java.lang.String&gt;" kind="element" deprecated="false" required="true" originalFieldName="exception" description="A set of exceptions to react upon."/>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="retryWhile" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="false" originalFieldName="retryWhile" description="Sets the retry while predicate. Will continue retrying until predicate returns false."/>
         <parameter name="onRedeliveryRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="onRedeliveryRef" description="Sets a reference to a processor that should be processed before a redelivery attempt. Can be used to change the org.apache.camel.Exchange before its being redelivered."/>
         <parameter name="redeliveryPolicy" type="object" javaType="org.apache.camel.model.RedeliveryPolicyDefinition" kind="element" deprecated="false" required="false" originalFieldName="redeliveryPolicy" description="Set the RedeliveryPolicy to be used."/>
         <parameter name="handled" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="false" originalFieldName="handled" description="Sets whether the exchange should be marked as handled or not."/>
         <parameter name="onWhen" type="object" javaType="org.apache.camel.model.WhenDefinition" kind="element" deprecated="false" required="false" originalFieldName="onWhen" description="Sets an additional predicate that should be true before the onException is triggered. To be used for fine grained controlling whether a thrown exception should be intercepted by this exception type or not."/>
         <parameter name="continued" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="false" originalFieldName="continued" description="Sets whether the exchange should handle and continue routing from the point of failure. If this option is enabled then its considered handled as well."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="useOriginalMessage" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="useOriginalMessage" description="Will use the original input message when an org.apache.camel.Exchange is moved to the dead letter queue. Notice: this only applies when all redeliveries attempt have failed and the org.apache.camel.Exchange is doomed for failure. Instead of using the current inprogress org.apache.camel.Exchange IN body we use the original IN body instead. This allows you to store the original input in the dead letter queue instead of the inprogress snapshot of the IN body. For instance if you route transform the IN body during routing and then failed. With the original exchange store in the dead letter queue it might be easier to manually re submit the org.apache.camel.Exchange again as the IN body is the same as when Camel received it. So you should be able to send the org.apache.camel.Exchange to the same input. By default this feature is off."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="redeliveryPolicyRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="redeliveryPolicyRef" description="Sets a reference to a RedeliveryPolicy to lookup in the org.apache.camel.spi.Registry to be used."/>
      </parameters>
   </eip>
   <eip>
      <name>pollEnrich</name>
      <tags>
         <tag>eip</tag>
         <tag>transformation</tag>
      </tags>
      <title>Poll Enrich</title>
      <description>Enriches messages with data polled from a secondary resource</description>
      <class>org.apache.camel.model.PollEnrichDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="strategyMethodAllowNull" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="strategyMethodAllowNull" description="If this option is false then the aggregate method is not used if there was no data to enrich. If this option is true then null values is used as the oldExchange (when no data to enrich) when using POJOs as the AggregationStrategy."/>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="true" required="false" originalFieldName="ref" description="Refers to the endpoint for the external service to poll enrich from. You must use either uri or ref."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="strategyMethodName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="strategyMethodName" description="This option can be used to explicit declare the method name to use when using POJOs as the AggregationStrategy."/>
         <parameter name="uri" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="uri" description="The endpoint uri for the external service to poll enrich from. You must use either uri or ref."/>
         <parameter name="aggregateOnException" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="aggregateOnException" description="If this option is false then the aggregate method is not used if there was an exception thrown while trying to retrieve the data to enrich from the resource. Setting this option to true allows end users to control what to do if there was an exception in the aggregate method. For example to suppress the exception or set a custom message body etc."/>
         <parameter name="timeout" type="integer" javaType="java.lang.Long" kind="attribute" deprecated="false" defaultValue="-1" required="false" originalFieldName="timeout" description="Timeout in millis when polling from the external service. The timeout has influence about the poll enrich behavior. It basically operations in three different modes: negative value - Waits until a message is available and then returns it. Warning that this method could block indefinitely if no messages are available. 0 - Attempts to receive a message exchange immediately without waiting and returning null if a message exchange is not available yet. positive value - Attempts to receive a message exchange waiting up to the given timeout to expire if a message is not yet available. Returns null if timed out The default value is -1 and therefore the method could block indefinitely and therefore its recommended to use a timeout value"/>
         <parameter name="strategyRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="strategyRef" description="Refers to an AggregationStrategy to be used to merge the reply from the external service into a single outgoing message. By default Camel will use the reply from the external service as outgoing message."/>
      </parameters>
   </eip>
   <eip>
      <name>syslog</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Syslog</title>
      <description>Syslog data format</description>
      <class>org.apache.camel.model.dataformat.SyslogDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
      </parameters>
   </eip>
   <eip>
      <name>restBinding</name>
      <tags>
         <tag>rest</tag>
      </tags>
      <title>Rest Binding</title>
      <description>To configure rest binding</description>
      <class>org.apache.camel.model.rest.RestBindingDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="enableCORS" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="enableCORS" description="Whether to enable CORS headers in the HTTP response. The default value is false."/>
         <parameter name="bindingMode" type="string" javaType="org.apache.camel.model.rest.RestBindingMode" kind="attribute" choice="auto,json,json_xml,off,xml" deprecated="false" defaultValue="auto" required="false" originalFieldName="bindingMode" description="Sets the binding mode to use. The default value is auto"/>
         <parameter name="skipBindingOnErrorCode" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="skipBindingOnErrorCode" description="Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc as success messages otherwise will do."/>
         <parameter name="produces" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="produces" description="To define the content type what the REST service produces (uses for output) such as application/xml or application/json"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="type" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="type" description="Sets the class name to use for binding from input to POJO for the incoming data"/>
         <parameter name="outType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="outType" description="Sets the class name to use for binding from POJO to output for the outgoing data"/>
         <parameter name="consumes" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="consumes" description="To define the content type what the REST service consumes (accept as input) such as application/xml or application/json"/>
      </parameters>
   </eip>
   <eip>
      <name>jaxb</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>JAXB</title>
      <description>JAXB data format</description>
      <class>org.apache.camel.model.dataformat.JaxbDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="schema" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="schema" description="To validate against an existing schema. Your can use the prefix classpath: file: or http: to specify how the resource should by resolved. You can separate multiple schema files by using the '' character."/>
         <parameter name="prettyPrint" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="prettyPrint" description="To enable pretty printing output nicely formatted. Is by default false."/>
         <parameter name="schemaLocation" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="schemaLocation" description="To define the location of the schema"/>
         <parameter name="ignoreJAXBElement" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="ignoreJAXBElement" description="Whether to ignore JAXBElement elements - only needed to be set to false in very special use-cases."/>
         <parameter name="contextPath" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="contextPath" description="Package name where your JAXB classes are located."/>
         <parameter name="xmlStreamWriterWrapper" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="xmlStreamWriterWrapper" description="To use a custom xml stream writer."/>
         <parameter name="encoding" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="encoding" description="To overrule and use a specific encoding"/>
         <parameter name="filterNonXmlChars" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="filterNonXmlChars" description="To ignore non xml characheters and replace them with an empty space."/>
         <parameter name="fragment" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="fragment" description="To turn on marshalling XML fragment trees. By default JAXB looks for XmlRootElement annotation on given class to operate on whole XML tree. This is useful but not always - sometimes generated code does not have XmlRootElement annotation sometimes you need unmarshall only part of tree. In that case you can use partial unmarshalling. To enable this behaviours you need set property partClass. Camel will pass this class to JAXB's unmarshaler."/>
         <parameter name="mustBeJAXBElement" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="mustBeJAXBElement" description="Whether marhsalling must be java objects with JAXB annotations. And if not then it fails. This option can be set to false to relax that such as when the data is already in XML format."/>
         <parameter name="namespacePrefixRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="namespacePrefixRef" description="When marshalling using JAXB or SOAP then the JAXB implementation will automatic assign namespace prefixes such as ns2 ns3 ns4 etc. To control this mapping Camel allows you to refer to a map which contains the desired mapping."/>
         <parameter name="partClass" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="partClass" description="Name of class used for fragment parsing. See more details at the fragment option."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="partNamespace" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="partNamespace" description="XML namespace to use for fragment parsing. See more details at the fragment option."/>
      </parameters>
   </eip>
   <eip>
      <name>xpath</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>XPath</title>
      <description>For XPath expressions and predicates</description>
      <class>org.apache.camel.model.language.XPathExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="headerName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="headerName" description="Name of header to use as input instead of the message body"/>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="documentType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="documentType" description="Name of class for document type The default value is org.w3c.dom.Document"/>
         <parameter name="objectModel" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="objectModel" description="The XPath object model to use"/>
         <parameter name="logNamespaces" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="logNamespaces" description="Whether to log namespaces which can assist during trouble shooting"/>
         <parameter name="factoryRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="factoryRef" description="References to a custom XPathFactory to lookup in the registry"/>
         <parameter name="saxon" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="saxon" description="Whether to use Saxon."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="resultType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="resultType" description="Sets the class name of the result type (type from output) The default result type is NodeSet"/>
      </parameters>
   </eip>
   <eip>
      <name>rss</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>RSS</title>
      <description>RSS data format</description>
      <class>org.apache.camel.model.dataformat.RssDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
      </parameters>
   </eip>
   <eip>
      <name>get</name>
      <tags>
         <tag>rest</tag>
      </tags>
      <title>Get</title>
      <description>Rest GET command</description>
      <class>org.apache.camel.model.rest.GetVerbDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="enableCORS" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="enableCORS" description="Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false."/>
         <parameter name="method" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="method" description="The HTTP verb such as GET or POST"/>
         <parameter name="bindingMode" type="string" javaType="org.apache.camel.model.rest.RestBindingMode" kind="attribute" choice="auto,json,json_xml,off,xml" deprecated="false" defaultValue="auto" required="false" originalFieldName="bindingMode" description="Sets the binding mode to use. This option will override what may be configured on a parent level The default value is auto"/>
         <parameter name="skipBindingOnErrorCode" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="skipBindingOnErrorCode" description="Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc as success messages otherwise will do. This option will override what may be configured on a parent level"/>
         <parameter name="produces" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="produces" description="To define the content type what the REST service produces (uses for output) such as application/xml or application/json This option will override what may be configured on a parent level"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="toOrRoute" type="object" javaType="org.apache.camel.model.OptionalIdentifiedDefinition&lt;?&gt;" kind="element" oneOf="route,to" deprecated="false" required="true" originalFieldName="toOrRoute" description="To route from this REST service to a Camel endpoint or an inlined route"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="type" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="type" description="Sets the class name to use for binding from input to POJO for the incoming data This option will override what may be configured on a parent level"/>
         <parameter name="uri" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="uri" description="Uri template of this REST service such as /id."/>
         <parameter name="outType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="outType" description="Sets the class name to use for binding from POJO to output for the outgoing data This option will override what may be configured on a parent level"/>
         <parameter name="consumes" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="consumes" description="To define the content type what the REST service consumes (accept as input) such as application/xml or application/json. This option will override what may be configured on a parent level"/>
      </parameters>
   </eip>
   <eip>
      <name>removeProperties</name>
      <tags>
         <tag>eip</tag>
         <tag>transformation</tag>
      </tags>
      <title>Remove Properties</title>
      <description>Removes message exchange properties whose name matches a specified pattern</description>
      <class>org.apache.camel.model.RemovePropertiesDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="pattern" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="pattern" description="Name or pattern of properties to remove"/>
         <parameter name="excludePattern" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="excludePattern" description="Name or pattern of properties to not remove"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>jsonpath</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>JSonPath</title>
      <description>For JSonPath expressions and predicates</description>
      <class>org.apache.camel.model.language.JsonPathExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="resultType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="resultType" description="Sets the class name of the result type (type from output)"/>
      </parameters>
   </eip>
   <eip>
      <name>pgp</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>PGP</title>
      <description>PGP data format</description>
      <class>org.apache.camel.model.dataformat.PGPDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="armored" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="armored" description="This option will cause PGP to base64 encode the encrypted text making it available for copy/paste etc."/>
         <parameter name="signaturePassword" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="signaturePassword" description="Password used when opening the private key used for signing (during encryption)."/>
         <parameter name="signatureKeyRing" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="signatureKeyRing" description="Keyring used for signing/verifying as byte array. You can not set the signatureKeyFileName and signatureKeyRing at the same time."/>
         <parameter name="keyFileName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="keyFileName" description="Filename of the keyring; must be accessible as a classpath resource (but you can specify a location in the file system by using the file: prefix)."/>
         <parameter name="signatureVerificationOption" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="signatureVerificationOption" description="Controls the behavior for verifying the signature during unmarshaling. There are 4 values possible: optional: The PGP message may or may not contain signatures; if it does contain signatures then a signature verification is executed. required: The PGP message must contain at least one signature; if this is not the case an exception (PGPException) is thrown. A signature verification is executed. ignore: Contained signatures in the PGP message are ignored; no signature verification is executed. no_signature_allowed: The PGP message must not contain a signature; otherwise an exception (PGPException) is thrown."/>
         <parameter name="signatureKeyUserid" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="signatureKeyUserid" description="User ID of the key in the PGP keyring used for signing (during encryption) or signature verification (during decryption). During the signature verification process the specified User ID restricts the public keys from the public keyring which can be used for the verification. If no User ID is specified for the signature verficiation then any public key in the public keyring can be used for the verification. Can also be only a part of a user ID. For example if the user ID is Test User then you can use the part Test User or to address the User ID."/>
         <parameter name="password" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="password" description="Password used when opening the private key (not used for encryption)."/>
         <parameter name="integrity" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="integrity" description="Adds an integrity check/sign into the encryption file. The default value is true."/>
         <parameter name="provider" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="provider" description="Java Cryptography Extension (JCE) provider default is Bouncy Castle (BC). Alternatively you can use for example the IAIK JCE provider; in this case the provider must be registered beforehand and the Bouncy Castle provider must not be registered beforehand. The Sun JCE provider does not work."/>
         <parameter name="keyUserid" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="keyUserid" description="The user ID of the key in the PGP keyring used during encryption. Can also be only a part of a user ID. For example if the user ID is Test User then you can use the part Test User or to address the user ID."/>
         <parameter name="compressionAlgorithm" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="compressionAlgorithm" description="Compression algorithm; possible values are defined in org.bouncycastle.bcpg.CompressionAlgorithmTags; for example 0 (= UNCOMPRESSED) 1 (= ZIP) 2 (= ZLIB) 3 (= BZIP2). Only relevant for encrypting."/>
         <parameter name="signatureKeyFileName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="signatureKeyFileName" description="Filename of the keyring to use for signing (during encryption) or for signature verification (during decryption); must be accessible as a classpath resource (but you can specify a location in the file system by using the file: prefix)."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="hashAlgorithm" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="hashAlgorithm" description="Signature hash algorithm; possible values are defined in org.bouncycastle.bcpg.HashAlgorithmTags; for example 2 (= SHA1) 8 (= SHA256) 9 (= SHA384) 10 (= SHA512) 11 (=SHA224). Only relevant for signing."/>
         <parameter name="algorithm" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="algorithm" description="Symmetric key encryption algorithm; possible values are defined in org.bouncycastle.bcpg.SymmetricKeyAlgorithmTags; for example 2 (= TRIPLE DES) 3 (= CAST5) 4 (= BLOWFISH) 6 (= DES) 7 (= AES_128). Only relevant for encrypting."/>
      </parameters>
   </eip>
   <eip>
      <name>xmlBeans</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>XML Beans</title>
      <description>XMLBeans data format</description>
      <class>org.apache.camel.model.dataformat.XMLBeansDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="prettyPrint" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="prettyPrint" description="To enable pretty printing output nicely formatted. Is by default false."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
      </parameters>
   </eip>
   <eip>
      <name>restContextRef</name>
      <tags>
         <tag>configuration</tag>
         <tag>rest</tag>
      </tags>
      <title>Rest Context Ref</title>
      <description>To refer to an XML file with rest services defined using the rest-dsl</description>
      <class>org.apache.camel.model.RestContextRefDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="ref" description="Reference to the rest-dsl"/>
      </parameters>
   </eip>
   <eip>
      <name>policy</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>Policy</title>
      <description>Defines a policy the route will use</description>
      <class>org.apache.camel.model.PolicyDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="ref" description="Sets a reference to use for lookup the policy in the registry."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>validate</name>
      <tags>
         <tag>eip</tag>
         <tag>transformation</tag>
      </tags>
      <title>Validate</title>
      <description>Validates a message based on an expression</description>
      <class>org.apache.camel.model.ValidateDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="expression" description="Expression to use for validation as a predicate. The expression should return either true or false. If returning false the message is invalid and an exception is thrown."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>rollback</name>
      <tags>
         <tag>eip</tag>
         <tag>routing</tag>
      </tags>
      <title>Rollback</title>
      <description>Forces a rollback by stopping routing the message</description>
      <class>org.apache.camel.model.RollbackDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="markRollbackOnly" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="markRollbackOnly" description="Mark the transaction for rollback only (cannot be overruled to commit)"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="message" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="message" description="Message to use in rollback exception"/>
         <parameter name="markRollbackOnlyLast" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="markRollbackOnlyLast" description="Mark only last sub transaction for rollback only. When using sub transactions (if the transaction manager support this)"/>
      </parameters>
   </eip>
   <eip>
      <name>expression</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>Expression</title>
      <description>A useful base class for an expression</description>
      <class>org.apache.camel.model.language.ExpressionDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>redeliveryPolicy</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>Redelivery Policy</title>
      <description>To configure re-delivery for error handling</description>
      <class>org.apache.camel.model.RedeliveryPolicyDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="logNewException" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="logNewException" description="Sets whether new exceptions should be logged or not. Can be used to include or reduce verbose. A new exception is an exception that was thrown while handling a previous exception."/>
         <parameter name="backOffMultiplier" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="backOffMultiplier" description="Sets the back off multiplier"/>
         <parameter name="exchangeFormatterRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="exchangeFormatterRef" description="Sets the reference of the instance of org.apache.camel.spi.ExchangeFormatter to generate the log message from exchange."/>
         <parameter name="allowRedeliveryWhileStopping" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="allowRedeliveryWhileStopping" description="Controls whether to allow redelivery while stopping/shutting down a route that uses error handling."/>
         <parameter name="delayPattern" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="delayPattern" description="Sets the delay pattern with delay intervals."/>
         <parameter name="retriesExhaustedLogLevel" type="string" javaType="org.apache.camel.LoggingLevel" kind="attribute" choice="DEBUG,ERROR,INFO,OFF,TRACE,WARN" deprecated="false" required="false" originalFieldName="retriesExhaustedLogLevel" description="Sets the logging level to use when retries has exhausted"/>
         <parameter name="logStackTrace" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="logStackTrace" description="Sets whether stack traces should be logged. Can be used to include or reduce verbose."/>
         <parameter name="useExponentialBackOff" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="useExponentialBackOff" description="Turn on exponential backk off"/>
         <parameter name="maximumRedeliveryDelay" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="maximumRedeliveryDelay" description="Sets the maximum delay between redelivery"/>
         <parameter name="logRetryAttempted" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="logRetryAttempted" description="Sets whether retry attempts should be logged or not. Can be used to include or reduce verbose."/>
         <parameter name="logExhaustedMessageHistory" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="logExhaustedMessageHistory" description="Sets whether exhausted exceptions should be logged including message history or not (supports property placeholders). Can be used to include or reduce verbose."/>
         <parameter name="collisionAvoidanceFactor" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="collisionAvoidanceFactor" description="Sets the collision avoidance factor"/>
         <parameter name="asyncDelayedRedelivery" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="asyncDelayedRedelivery" description="Allow synchronous delayed redelivery."/>
         <parameter name="logRetryStackTrace" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="logRetryStackTrace" description="Sets whether stack traces should be logged when an retry attempt failed. Can be used to include or reduce verbose."/>
         <parameter name="logContinued" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="logContinued" description="Sets whether continued exceptions should be logged or not. Can be used to include or reduce verbose."/>
         <parameter name="disableRedelivery" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="disableRedelivery" description="Disables redelivery (same as setting maximum redeliveries to 0)"/>
         <parameter name="retryAttemptedLogLevel" type="string" javaType="org.apache.camel.LoggingLevel" kind="attribute" choice="DEBUG,ERROR,INFO,OFF,TRACE,WARN" deprecated="false" required="false" originalFieldName="retryAttemptedLogLevel" description="Sets the logging level to use for logging retry attempts"/>
         <parameter name="redeliveryDelay" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="redeliveryDelay" description="Sets the initial redelivery delay"/>
         <parameter name="logHandled" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="logHandled" description="Sets whether handled exceptions should be logged or not. Can be used to include or reduce verbose."/>
         <parameter name="maximumRedeliveries" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="maximumRedeliveries" description="Sets the maximum redeliveries x = redeliver at most x times 0 = no redeliveries -1 = redeliver forever"/>
         <parameter name="logExhausted" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="logExhausted" description="Sets whether exhausted exceptions should be logged or not. Can be used to include or reduce verbose."/>
         <parameter name="useCollisionAvoidance" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="useCollisionAvoidance" description="Turn on collision avoidance."/>
      </parameters>
   </eip>
   <eip>
      <name>xquery</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>XQuery</title>
      <description>For XQuery expressions and predicates</description>
      <class>org.apache.camel.model.language.XQueryExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="headerName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="headerName" description="Name of header to use as input instead of the message body"/>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="type" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="type" description="Sets the class name of the result type (type from output) The default result type is NodeSet"/>
      </parameters>
   </eip>
   <eip>
      <name>rests</name>
      <tags>
         <tag>rest</tag>
      </tags>
      <title>Rests</title>
      <description>A series of rest services defined using the rest-dsl</description>
      <class>org.apache.camel.model.rest.RestsDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>gzip</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>GZip</title>
      <description>GZip data format</description>
      <class>org.apache.camel.model.dataformat.GzipDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
      </parameters>
   </eip>
   <eip>
      <name>setBody</name>
      <tags>
         <tag>eip</tag>
         <tag>transformation</tag>
      </tags>
      <title>Set Body</title>
      <description>Sets the contents of the message body</description>
      <class>org.apache.camel.model.SetBodyDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="expression" description="Expression that returns the new body to use"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>sample</name>
      <tags>
         <tag>eip</tag>
         <tag>routing</tag>
      </tags>
      <title>Sample</title>
      <description>Extract a sample of the messages passing through a route</description>
      <class>org.apache.camel.model.SamplingDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="messageFrequency" type="integer" javaType="java.lang.Long" kind="attribute" deprecated="false" required="false" originalFieldName="messageFrequency" description="Sets the sample message count which only a single Exchange will pass through after this many received."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="units" type="string" javaType="java.util.concurrent.TimeUnit" kind="attribute" choice="DAYS,HOURS,MICROSECONDS,MILLISECONDS,MINUTES,NANOSECONDS,SECONDS" deprecated="false" defaultValue="SECONDS" required="false" originalFieldName="units" description="Sets the time units for the sample period defaulting to seconds."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="samplePeriod" type="integer" javaType="java.lang.Long" kind="attribute" deprecated="false" defaultValue="1" required="false" originalFieldName="samplePeriod" description="Sets the sample period during which only a single Exchange will pass through."/>
      </parameters>
   </eip>
   <eip>
      <name>dynamicRouter</name>
      <tags>
         <tag>eip</tag>
         <tag>endpoint</tag>
         <tag>routing</tag>
      </tags>
      <title>Dynamic Router</title>
      <description>Routes messages based on dynamic rules</description>
      <class>org.apache.camel.model.DynamicRouterDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="uriDelimiter" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="," required="false" originalFieldName="uriDelimiter" description="Sets the uri delimiter to use"/>
         <parameter name="ignoreInvalidEndpoints" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="ignoreInvalidEndpoints" description="Ignore the invalidate endpoint exception when try to create a producer with that endpoint"/>
         <parameter name="cacheSize" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="cacheSize" description="Sets the maximum size used by the org.apache.camel.impl.ProducerCache which is used to cache and reuse producers when using this recipient list when uris are reused."/>
         <parameter name="expression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="expression" description="Expression to call that returns the endpoint(s) to route to in the dynamic routing. Important: The expression will be called in a while loop fashion until the expression returns null which means the dynamic router is finished."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>filter</name>
      <tags>
         <tag>eip</tag>
         <tag>routing</tag>
      </tags>
      <title>Filter</title>
      <description>Filter out messages based using a predicate</description>
      <class>org.apache.camel.model.FilterDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="expression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="expression" description="Expression to determine if the message should be filtered or not. If the expression returns an empty value or false then the message is filtered (dropped) otherwise the message is continued being routed."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>pipeline</name>
      <tags>
         <tag>eip</tag>
         <tag>routing</tag>
      </tags>
      <title>Pipeline</title>
      <description>Routes the message to a sequence of processors.</description>
      <class>org.apache.camel.model.PipelineDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>xmljson</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>XML JSon</title>
      <description>xml-json data format</description>
      <class>org.apache.camel.model.dataformat.XmlJsonDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expandableProperties" type="array" javaType="java.util.List&lt;java.lang.String&gt;" kind="attribute" deprecated="false" required="false" originalFieldName="expandableProperties" description="With expandable properties JSON array elements are converted to XML as a sequence of repetitive XML elements with the local name equal to the JSON key for example: number: 123 normally converted to: 123 (where e can be modified by setting elementName) would instead translate to 123 if number is set as an expandable property Used for unmarshalling (JSON to XML conversion)."/>
         <parameter name="forceTopLevelObject" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="forceTopLevelObject" description="Determines whether the resulting JSON will start off with a top-most element whose name matches the XML root element. Used for marshalling (XML to JSon conversion). If disabled XML string 12 turns into 'x: '1' 'y': '2' . Otherwise it turns into 'a': 'x: '1' 'y': '2' ."/>
         <parameter name="rootName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="rootName" description="Specifies the name of the top-level element. Used for unmarshalling (JSON to XML conversion). If not set json-lib will use arrayName or objectName (default value: 'o' at the current time it is not configurable in this data format). If set to 'root' the JSON string 'x': 'value1' 'y' : 'value2' would turn into value1value2 otherwise the 'root' element would be named 'o'."/>
         <parameter name="removeNamespacePrefixes" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="removeNamespacePrefixes" description="Removes the namespace prefixes from XML qualified elements so that the resulting JSON string does not contain them. Used for marshalling (XML to JSon conversion)."/>
         <parameter name="arrayName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="arrayName" description="Specifies the name of the top-level XML element. Used for unmarshalling (JSON to XML conversion). For example when converting 1 2 3 it will be output by default as 123. By setting this option or rootName you can alter the name of element 'a'."/>
         <parameter name="encoding" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="encoding" description="Sets the encoding. Used for unmarshalling (JSON to XML conversion)."/>
         <parameter name="elementName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="elementName" description="Specifies the name of the XML elements representing each array element. Used for unmarshalling (JSON to XML conversion)."/>
         <parameter name="trimSpaces" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="trimSpaces" description="Determines whether leading and trailing white spaces will be omitted from String values. Used for marshalling (XML to JSon conversion)."/>
         <parameter name="typeHints" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="typeHints" description="Adds type hints to the resulting XML to aid conversion back to JSON. Used for unmarshalling (JSON to XML conversion)."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="namespaceLenient" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="namespaceLenient" description="Flag to be tolerant to incomplete namespace prefixes. Used for unmarshalling (JSON to XML conversion). In most cases json-lib automatically changes this flag at runtime to match the processing."/>
         <parameter name="skipNamespaces" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="skipNamespaces" description="Signals whether namespaces should be ignored. By default they will be added to the JSON output using xmlns elements. Used for marshalling (XML to JSon conversion)."/>
         <parameter name="skipWhitespace" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="skipWhitespace" description="Determines whether white spaces between XML elements will be regarded as text values or disregarded. Used for marshalling (XML to JSon conversion)."/>
      </parameters>
   </eip>
   <eip>
      <name>wireTap</name>
      <tags>
         <tag>eip</tag>
         <tag>endpoint</tag>
         <tag>routing</tag>
      </tags>
      <title>Wire Tap</title>
      <description>Routes a copy of a message (or creates a new message) to a secondary destination while continue routing the original message.</description>
      <class>org.apache.camel.model.WireTapDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="processorRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="processorRef" description="Reference to a Processor to use for creating a new body as the message to use for wire tapping"/>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="true" required="false" originalFieldName="ref" description="Reference of the endpoint to use as wire tap"/>
         <parameter name="executorServiceRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="executorServiceRef" description="Uses a custom thread pool"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="copy" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="copy" description="Uses a copy of the original exchange"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="body" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="false" originalFieldName="body" description="Expression used for creating a new body as the message to use for wire tapping"/>
         <parameter name="uri" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="uri" description="Uri of the endpoint to use as wire tap"/>
         <parameter name="onPrepareRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="onPrepareRef" description="Uses the Processor when preparing the org.apache.camel.Exchange to be send. This can be used to deep-clone messages that should be send or any custom logic needed before the exchange is send."/>
      </parameters>
   </eip>
   <eip>
      <name>php</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>PHP</title>
      <description>For PHP expressions and predicates</description>
      <class>org.apache.camel.model.language.PhpExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>setOutHeader</name>
      <tags>
         <tag>eip</tag>
         <tag>transformation</tag>
      </tags>
      <title>Set Out Header</title>
      <description>Sets the value of a header on the outbound message</description>
      <class>org.apache.camel.model.SetOutHeaderDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="headerName" type="string" javaType="java.lang.String" kind="attribute" deprecated="true" required="true" originalFieldName="headerName" description="Name of message header to set a new value"/>
         <parameter name="expression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="expression" description="Expression to return the value of the header"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>xtokenize</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>XML Tokenize</title>
      <description>For expressions and predicates using a body or header tokenizer.</description>
      <class>org.apache.camel.model.language.XMLTokenizerExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="mode" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="mode" description="The extraction mode. The available extraction modes are: i - injecting the contextual namespace bindings into the extracted token (default) w - wrapping the extracted token in its ancestor context u - unwrapping the extracted token to its child content t - extracting the text content of the specified element"/>
         <parameter name="headerName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="headerName" description="Name of header to tokenize instead of using the message body."/>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="group" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="group" description="To group N parts together"/>
      </parameters>
   </eip>
   <eip>
      <name>to</name>
      <tags>
         <tag>eip</tag>
         <tag>endpoint</tag>
         <tag>routing</tag>
      </tags>
      <title>To</title>
      <description>Sends the message to an endpoint</description>
      <class>org.apache.camel.model.ToDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="true" required="false" originalFieldName="ref" description="Sets the reference of the endpoint to send to."/>
         <parameter name="pattern" type="string" javaType="org.apache.camel.ExchangePattern" kind="attribute" choice="InOnly,InOptionalOut,InOut,OutIn,OutOnly,OutOptionalIn,RobustInOnly,RobustOutOnly" deprecated="false" required="false" originalFieldName="pattern" description="Sets the optional ExchangePattern used to invoke this endpoint"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="uri" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="uri" description="Sets the uri of the endpoint to send to."/>
      </parameters>
   </eip>
   <eip>
      <name>choice</name>
      <tags>
         <tag>eip</tag>
         <tag>routing</tag>
      </tags>
      <title>Choice</title>
      <description>Routes messages based on a series of predicates</description>
      <class>org.apache.camel.model.ChoiceDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="otherwise" type="object" javaType="org.apache.camel.model.OtherwiseDefinition" kind="element" deprecated="false" required="false" originalFieldName="otherwise" description="Sets the otherwise node"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="whenClauses" type="array" javaType="java.util.List&lt;org.apache.camel.model.WhenDefinition&gt;" kind="element" deprecated="false" required="false" originalFieldName="whenClauses" description="Sets the when clauses"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>protobuf</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Protobuf</title>
      <description>Google protobuf data format</description>
      <class>org.apache.camel.model.dataformat.ProtobufDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="instanceClass" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="instanceClass" description="Name of class to use when unarmshalling"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
      </parameters>
   </eip>
   <eip>
      <name>constant</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>Constant</title>
      <description>For expressions and predicates using a constant</description>
      <class>org.apache.camel.model.language.ConstantExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>tidyMarkup</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>TidyMarkup</title>
      <description>Tidymark (wellformed HTML) data format</description>
      <class>org.apache.camel.model.dataformat.TidyMarkupDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="dataObjectType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="dataObjectType" description="What data type to unmarshal as can either be org.w3c.dom.Node or java.lang.String. Is by default org.w3c.dom.Node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
      </parameters>
   </eip>
   <eip>
      <name>doTry</name>
      <tags>
         <tag>error</tag>
      </tags>
      <title>Do Try</title>
      <description>Marks the beginning of a try catch finally block</description>
      <class>org.apache.camel.model.TryDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>base64</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Base64</title>
      <description>Base64 data format</description>
      <class>org.apache.camel.model.dataformat.Base64DataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="urlSafe" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="urlSafe" description="Instead of emitting '' and '/' we emit '-' and '_' respectively. urlSafe is only applied to encode operations. Decoding seamlessly handles both modes. Is by default false."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="lineSeparator" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="\r\n" required="false" originalFieldName="lineSeparator" description="The line separators to use. By default \r\n is used."/>
         <parameter name="lineLength" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" defaultValue="76" required="false" originalFieldName="lineLength" description="To specific a maximum line length for the encoded data. By default 76 is used."/>
      </parameters>
   </eip>
   <eip>
      <name>language</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>Language</title>
      <description>Represents a parameterised language expression which can support any language at runtime using the language attribute.</description>
      <class>org.apache.camel.model.language.LanguageExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="language" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="language" description="The name of the language to use"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>simple</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>Simple</title>
      <description>For expressions and predicates using the simple language</description>
      <class>org.apache.camel.model.language.SimpleExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="resultType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="resultType" description="Sets the class name of the result type (type from output)"/>
      </parameters>
   </eip>
   <eip>
      <name>tokenize</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>Tokenize</title>
      <description>For expressions and predicates using a body or header tokenizer.</description>
      <class>org.apache.camel.model.language.TokenizerExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="endToken" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="endToken" description="The end token to use as tokenizer if using start/end token pairs."/>
         <parameter name="regex" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="regex" description="If the token is a regular expression pattern. The default value is false"/>
         <parameter name="headerName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="headerName" description="Name of header to tokenize instead of using the message body."/>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="includeTokens" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="includeTokens" description="Whether to include the tokens in the parts The default value is false"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="xml" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="xml" description="Whether the input is XML messages. This option must be set to true if working with XML payloads."/>
         <parameter name="inheritNamespaceTagName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="inheritNamespaceTagName" description="To inherit namepaces from a root/parent tag name"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="token" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="token" description="The (start) token to use as tokenizer for example \n for a new line token"/>
         <parameter name="group" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="group" description="To group N parts together for example to split big files into chunks of 1000 lines."/>
      </parameters>
   </eip>
   <eip>
      <name>routes</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>Routes</title>
      <description>A series of Camel routes</description>
      <class>org.apache.camel.model.RoutesDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>ref</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>Ref</title>
      <description>For using a custom expression</description>
      <class>org.apache.camel.model.language.RefExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>split</name>
      <tags>
         <tag>eip</tag>
         <tag>routing</tag>
      </tags>
      <title>Split</title>
      <description>Splits a single message into many sub-messages.</description>
      <class>org.apache.camel.model.SplitDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="strategyMethodAllowNull" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="strategyMethodAllowNull" description="If this option is false then the aggregate method is not used if there was no data to enrich. If this option is true then null values is used as the oldExchange (when no data to enrich) when using POJOs as the AggregationStrategy"/>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="executorServiceRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="executorServiceRef" description="Refers to a custom Thread Pool to be used for parallel processing. Notice if you set this option then parallel processing is automatic implied and you do not have to enable that option as well."/>
         <parameter name="expression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="expression" description="Expression of how to split the message body such as as-is using a tokenizer or using an xpath."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="strategyMethodName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="strategyMethodName" description="This option can be used to explicit declare the method name to use when using POJOs as the AggregationStrategy."/>
         <parameter name="timeout" type="integer" javaType="java.lang.Long" kind="attribute" deprecated="false" defaultValue="0" required="false" originalFieldName="timeout" description="Sets a total timeout specified in millis when using parallel processing. If the Splitter hasn't been able to split and process all the sub messages within the given timeframe then the timeout triggers and the Splitter breaks out and continues. Notice if you provide a TimeoutAwareAggregationStrategy then the timeout method is invoked before breaking out. If the timeout is reached with running tasks still remaining certain tasks for which it is difficult for Camel to shut down in a graceful manner may continue to run. So use this option with a bit of care."/>
         <parameter name="onPrepareRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="onPrepareRef" description="Uses the Processor when preparing the org.apache.camel.Exchange to be send. This can be used to deep-clone messages that should be send or any custom logic needed before the exchange is send."/>
         <parameter name="streaming" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="streaming" description="When in streaming mode then the splitter splits the original message on-demand and each splitted message is processed one by one. This reduces memory usage as the splitter do not split all the messages first but then we do not know the total size and therefore the link org.apache.camel.ExchangeSPLIT_SIZE is empty. In non-streaming mode (default) the splitter will split each message first to know the total size and then process each message one by one. This requires to keep all the splitted messages in memory and therefore requires more memory. The total size is provided in the link org.apache.camel.ExchangeSPLIT_SIZE header. The streaming mode also affects the aggregation behavior. If enabled then Camel will process replies out-of-order eg in the order they come back. If disabled Camel will process replies in the same order as the messages was splitted."/>
         <parameter name="stopOnException" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="stopOnException" description="Will now stop further processing if an exception or failure occurred during processing of an org.apache.camel.Exchange and the caused exception will be thrown. Will also stop if processing the exchange failed (has a fault message) or an exception was thrown and handled by the error handler (such as using onException). In all situations the splitter will stop further processing. This is the same behavior as in pipeline which is used by the routing engine. The default behavior is to not stop but continue processing till the end"/>
         <parameter name="parallelProcessing" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="parallelProcessing" description="If enabled then processing each splitted messages occurs concurrently. Note the caller thread will still wait until all messages has been fully processed before it continues. Its only processing the sub messages from the splitter which happens concurrently."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="parallelAggregate" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="parallelAggregate" description="If enabled then the aggregate method on AggregationStrategy can be called concurrently. Notice that this would require the implementation of AggregationStrategy to be implemented as thread-safe. By default this is false meaning that Camel synchronizes the call to the aggregate method. Though in some use-cases this can be used to archive higher performance when the AggregationStrategy is implemented as thread-safe."/>
         <parameter name="strategyRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="strategyRef" description="Sets a reference to the AggregationStrategy to be used to assemble the replies from the splitted messages into a single outgoing message from the Splitter. By default Camel will use the original incoming message to the splitter (leave it unchanged). You can also use a POJO as the AggregationStrategy"/>
         <parameter name="shareUnitOfWork" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="shareUnitOfWork" description="Shares the org.apache.camel.spi.UnitOfWork with the parent and each of the sub messages. Splitter will by default not share unit of work between the parent exchange and each splitted exchange. This means each splitted exchange has its own individual unit of work."/>
      </parameters>
   </eip>
   <eip>
      <name>post</name>
      <tags>
         <tag>rest</tag>
      </tags>
      <title>Post</title>
      <description>Rest POST command</description>
      <class>org.apache.camel.model.rest.PostVerbDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="enableCORS" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="enableCORS" description="Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false."/>
         <parameter name="method" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="method" description="The HTTP verb such as GET or POST"/>
         <parameter name="bindingMode" type="string" javaType="org.apache.camel.model.rest.RestBindingMode" kind="attribute" choice="auto,json,json_xml,off,xml" deprecated="false" defaultValue="auto" required="false" originalFieldName="bindingMode" description="Sets the binding mode to use. This option will override what may be configured on a parent level The default value is auto"/>
         <parameter name="skipBindingOnErrorCode" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="skipBindingOnErrorCode" description="Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc as success messages otherwise will do. This option will override what may be configured on a parent level"/>
         <parameter name="produces" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="produces" description="To define the content type what the REST service produces (uses for output) such as application/xml or application/json This option will override what may be configured on a parent level"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="toOrRoute" type="object" javaType="org.apache.camel.model.OptionalIdentifiedDefinition&lt;?&gt;" kind="element" oneOf="route,to" deprecated="false" required="true" originalFieldName="toOrRoute" description="To route from this REST service to a Camel endpoint or an inlined route"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="type" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="type" description="Sets the class name to use for binding from input to POJO for the incoming data This option will override what may be configured on a parent level"/>
         <parameter name="uri" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="uri" description="Uri template of this REST service such as /id."/>
         <parameter name="outType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="outType" description="Sets the class name to use for binding from POJO to output for the outgoing data This option will override what may be configured on a parent level"/>
         <parameter name="consumes" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="consumes" description="To define the content type what the REST service consumes (accept as input) such as application/xml or application/json. This option will override what may be configured on a parent level"/>
      </parameters>
   </eip>
   <eip>
      <name>loop</name>
      <tags>
         <tag>eip</tag>
         <tag>routing</tag>
      </tags>
      <title>Loop</title>
      <description>Processes a message multiple times</description>
      <class>org.apache.camel.model.LoopDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="expression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="expression" description="Expression to define how many times we should loop. Notice the expression is only evaluated once and should return a number as how many times to loop. A value of zero or negative means no looping. The loop is like a for-loop fashion if you want a while loop then the dynamic router may be a better choice."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="copy" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="copy" description="If the copy attribute is true a copy of the input Exchange is used for each iteration. That means each iteration will start from a copy of the same message. By default loop will loop the same exchange all over so each iteration may have different message content."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>restConfiguration</name>
      <tags>
         <tag>rest</tag>
      </tags>
      <title>Rest Configuration</title>
      <description>To configure rest</description>
      <class>org.apache.camel.model.rest.RestConfigurationDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="enableCORS" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="enableCORS" description="Whether to enable CORS headers in the HTTP response. The default value is false."/>
         <parameter name="scheme" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="scheme" description="The scheme to use for exposing the REST service. Usually http or https is supported. The default value is http"/>
         <parameter name="contextPath" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="contextPath" description="Sets a leading context-path the REST services will be using. This can be used when using components such as SERVLET where the deployed web application is deployed using a context-path."/>
         <parameter name="consumerProperty" type="array" javaType="java.util.List&lt;org.apache.camel.model.rest.RestPropertyDefinition&gt;" kind="element" deprecated="false" required="false" originalFieldName="consumerProperty" description="Allows to configure as many additional properties for the rest consumer in use."/>
         <parameter name="hostNameResolver" type="string" javaType="org.apache.camel.model.rest.RestHostNameResolver" kind="attribute" choice="localHostName,localIp" deprecated="false" required="false" originalFieldName="hostNameResolver" description="If no hostname has been explicit configured then this resolver is used to compute the hostname the REST service will be using."/>
         <parameter name="componentProperty" type="array" javaType="java.util.List&lt;org.apache.camel.model.rest.RestPropertyDefinition&gt;" kind="element" deprecated="false" required="false" originalFieldName="componentProperty" description="Allows to configure as many additional properties for the rest component in use."/>
         <parameter name="corsHeaders" type="array" javaType="java.util.List&lt;org.apache.camel.model.rest.RestPropertyDefinition&gt;" kind="element" deprecated="false" required="false" originalFieldName="corsHeaders" description="Allows to configure custom CORS headers."/>
         <parameter name="component" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="component" description="The Camel Rest component to use for the REST transport such as restlet spark-rest. If no component has been explicit configured then Camel will lookup if there is a Camel component that integrates with the Rest DSL or if a org.apache.camel.spi.RestConsumerFactory is registered in the registry. If either one is found then that is being used."/>
         <parameter name="dataFormatProperty" type="array" javaType="java.util.List&lt;org.apache.camel.model.rest.RestPropertyDefinition&gt;" kind="element" deprecated="false" required="false" originalFieldName="dataFormatProperty" description="Allows to configure as many additional properties for the data formats in use. For example set property prettyPrint to true to have json outputted in pretty mode. The properties can be prefixed to denote the option is only for either JSON or XML and for either the IN or the OUT. The prefixes are: json.in. json.out. xml.in. xml.out. For example a key with value xml.out.mustBeJAXBElement is only for the XML data format for the outgoing. A key without a prefix is a common key for all situations."/>
         <parameter name="bindingMode" type="string" javaType="org.apache.camel.model.rest.RestBindingMode" kind="attribute" choice="auto,json,json_xml,off,xml" deprecated="false" defaultValue="auto" required="false" originalFieldName="bindingMode" description="Sets the binding mode to use. The default value is auto"/>
         <parameter name="port" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="port" description="The port number to use for exposing the REST service. Notice if you use servlet component then the port number configured here does not apply as the port number in use is the actual port number the servlet component is using. eg if using Apache Tomcat its the tomcat http port if using Apache Karaf its the HTTP service in Karaf that uses port 8181 by default etc. Though in those situations setting the port number here allows tooling and JMX to know the port number so its recommended to set the port number to the number that the servlet engine uses."/>
         <parameter name="skipBindingOnErrorCode" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="skipBindingOnErrorCode" description="Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc as success messages otherwise will do."/>
         <parameter name="host" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="host" description="The hostname to use for exposing the REST service."/>
         <parameter name="xmlDataFormat" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="xmlDataFormat" description="Name of specific XML data format to use. By default jaxb will be used. Important: This option is only for setting a custom name of the data format not to refer to an existing data format instance."/>
         <parameter name="endpointProperty" type="array" javaType="java.util.List&lt;org.apache.camel.model.rest.RestPropertyDefinition&gt;" kind="element" deprecated="false" required="false" originalFieldName="endpointProperty" description="Allows to configure as many additional properties for the rest endpoint in use."/>
         <parameter name="jsonDataFormat" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="jsonDataFormat" description="Name of specific json data format to use. By default json-jackson will be used. Important: This option is only for setting a custom name of the data format not to refer to an existing data format instance."/>
      </parameters>
   </eip>
   <eip>
      <name>xmlrpc</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>XML RPC</title>
      <description>xml-rpc data format</description>
      <class>org.apache.camel.model.dataformat.XmlRpcDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="request" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="request" description="Whether to unmarshal request or response Is by default false"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
      </parameters>
   </eip>
   <eip>
      <name>marshal</name>
      <tags>
         <tag>eip</tag>
         <tag>transformation</tag>
      </tags>
      <title>Marshal</title>
      <description>Marshals data into a specified format for transmission over a transport or component</description>
      <class>org.apache.camel.model.MarshalDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="true" required="false" originalFieldName="ref" description="To refer to a custom data format to use as marshaller"/>
         <parameter name="dataFormatType" type="object" javaType="org.apache.camel.model.DataFormatDefinition" kind="element" oneOf="avro,base64,beanio,bindy,castor,crypto,csv,custom,flatpack,gzip,hl7,ical,jaxb,jibx,json,pgp,protobuf,rss,secureXML,serialization,soapjaxb,string,syslog,tidyMarkup,univocity-csv,univocity-fixed,univocity-tsv,xmlBeans,xmljson,xmlrpc,xstream,zip,zipFile" deprecated="false" required="true" originalFieldName="dataFormatType" description="The data format to be used"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>circuitBreaker</name>
      <tags>
         <tag>configuration</tag>
         <tag>loadbalance</tag>
      </tags>
      <title>Circuit Breaker</title>
      <description>Circuit break load balancer</description>
      <class>org.apache.camel.model.loadbalancer.CircuitBreakerLoadBalancerDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="exception" type="array" javaType="java.util.List&lt;java.lang.String&gt;" kind="element" deprecated="false" required="false" originalFieldName="exception" description="A list of class names for specific exceptions to monitor. If no exceptions is configured then all exceptions is monitored"/>
         <parameter name="halfOpenAfter" type="integer" javaType="java.lang.Long" kind="attribute" deprecated="false" required="false" originalFieldName="halfOpenAfter" description="The timeout in millis to use as threshold to move state from closed to half-open or open state"/>
         <parameter name="threshold" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="threshold" description="Number of previous failed messages to use as threshold to move state from closed to half-open or open state"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
      </parameters>
   </eip>
   <eip>
      <name>enrich</name>
      <tags>
         <tag>eip</tag>
         <tag>transformation</tag>
      </tags>
      <title>Enrich</title>
      <description>Enriches a message with data from a secondary resource</description>
      <class>org.apache.camel.model.EnrichDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="strategyMethodAllowNull" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="strategyMethodAllowNull" description="If this option is false then the aggregate method is not used if there was no data to enrich. If this option is true then null values is used as the oldExchange (when no data to enrich) when using POJOs as the AggregationStrategy."/>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="true" required="false" originalFieldName="ref" description="Refers to the endpoint for the external service to enrich from. You must use either uri or ref."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="strategyMethodName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="strategyMethodName" description="This option can be used to explicit declare the method name to use when using POJOs as the AggregationStrategy."/>
         <parameter name="uri" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="uri" description="The endpoint uri for the external service to enrich from. You must use either uri or ref."/>
         <parameter name="aggregateOnException" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="aggregateOnException" description="If this option is false then the aggregate method is not used if there was an exception thrown while trying to retrieve the data to enrich from the resource. Setting this option to true allows end users to control what to do if there was an exception in the aggregate method. For example to suppress the exception or set a custom message body etc."/>
         <parameter name="strategyRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="strategyRef" description="Refers to an AggregationStrategy to be used to merge the reply from the external service into a single outgoing message. By default Camel will use the reply from the external service as outgoing message."/>
      </parameters>
   </eip>
   <eip>
      <name>from</name>
      <tags>
         <tag>eip</tag>
         <tag>endpoint</tag>
         <tag>routing</tag>
      </tags>
      <title>From</title>
      <description>Act as a message source as input to a route</description>
      <class>org.apache.camel.model.FromDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>true</output>
         <parameters>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="true" required="false" originalFieldName="ref" description="Sets the name of the endpoint within the registry (such as the Spring ApplicationContext or JNDI) to use"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="uri" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="uri" description="Sets the URI of the endpoint to use"/>
      </parameters>
   </eip>
   <eip>
      <name>secureXML</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>XML Security</title>
      <description>xml-security data format</description>
      <class>org.apache.camel.model.dataformat.XMLSecurityDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="addKeyValueForEncryptedKey" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="addKeyValueForEncryptedKey" description="Whether to add the public key used to encrypt the session key as a KeyValue in the EncryptedKey structure or not."/>
         <parameter name="keyCipherAlgorithm" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="RSA_OAEP" required="false" originalFieldName="keyCipherAlgorithm" description="The cipher algorithm to be used for encryption/decryption of the asymmetric key. The available choices are: XMLCipher.RSA_v1dot5 XMLCipher.RSA_OAEP XMLCipher.RSA_OAEP_11 The default value is XMLCipher.RSA_OAEP"/>
         <parameter name="recipientKeyAlias" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="recipientKeyAlias" description="The key alias to be used when retrieving the recipient's public or private key from a KeyStore when performing asymmetric key encryption or decryption."/>
         <parameter name="keyPassword" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="keyPassword" description="The password to be used for retrieving the private key from the KeyStore. This key is used for asymmetric decryption."/>
         <parameter name="secureTag" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="secureTag" description="The XPath reference to the XML Element selected for encryption/decryption. If no tag is specified the entire payload is encrypted/decrypted."/>
         <parameter name="digestAlgorithm" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="SHA1" required="false" originalFieldName="digestAlgorithm" description="The digest algorithm to use with the RSA OAEP algorithm. The available choices are: XMLCipher.SHA1 XMLCipher.SHA256 XMLCipher.SHA512 The default value is XMLCipher.SHA1"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="keyOrTrustStoreParametersId" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="keyOrTrustStoreParametersId" description="Refers to a KeyStore instance to lookup in the registry which is used for configuration options for creating and loading a KeyStore instance that represents the sender's trustStore or recipient's keyStore."/>
         <parameter name="xmlCipherAlgorithm" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="TRIPLEDES" required="false" originalFieldName="xmlCipherAlgorithm" description="The cipher algorithm to be used for encryption/decryption of the XML message content. The available choices are: XMLCipher.TRIPLEDES XMLCipher.AES_128 XMLCipher.AES_128_GCM XMLCipher.AES_192 XMLCipher.AES_192_GCM XMLCipher.AES_256 XMLCipher.AES_256_GCM XMLCipher.SEED_128 XMLCipher.CAMELLIA_128 XMLCipher.CAMELLIA_192 XMLCipher.CAMELLIA_256 The default value is MLCipher.TRIPLEDES"/>
         <parameter name="mgfAlgorithm" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="MGF1_SHA1" required="false" originalFieldName="mgfAlgorithm" description="The MGF Algorithm to use with the RSA OAEP algorithm. The available choices are: EncryptionConstants.MGF1_SHA1 EncryptionConstants.MGF1_SHA256 EncryptionConstants.MGF1_SHA512 The default value is EncryptionConstants.MGF1_SHA1"/>
         <parameter name="passPhrase" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="passPhrase" description="A String used as passPhrase to encrypt/decrypt content. The passPhrase has to be provided. If no passPhrase is specified a default passPhrase is used. The passPhrase needs to be put together in conjunction with the appropriate encryption algorithm. For example using TRIPLEDES the passPhase can be a Only another 24 Byte key"/>
         <parameter name="secureTagContents" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="secureTagContents" description="A boolean value to specify whether the XML Element is to be encrypted or the contents of the XML Element false = Element Level true = Element Content Level"/>
      </parameters>
   </eip>
   <eip>
      <name>barcode</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Barcode</title>
      <description>Barcode data format</description>
      <class>org.apache.camel.model.dataformat.BarcodeDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="barcodeFormat" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="barcodeFormat" description="Barcode format such as QR-Code"/>
         <parameter name="width" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="width" description="Width of the barcode"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="imageType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="imageType" description="Image type of the barcode such as png"/>
         <parameter name="height" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="height" description="Height of the barcode"/>
      </parameters>
   </eip>
   <eip>
      <name>stream-config</name>
      <tags>
         <tag>configuration</tag>
         <tag>resequence</tag>
      </tags>
      <title>Stream-config</title>
      <description>Configures stream-processing resequence eip.</description>
      <class>org.apache.camel.model.config.StreamResequencerConfig</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="comparatorRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="comparatorRef" description="To use a custom comparator"/>
         <parameter name="timeout" type="integer" javaType="java.lang.Long" kind="attribute" deprecated="false" defaultValue="1000" required="false" originalFieldName="timeout" description="Sets minimum time to wait for missing elements (messages)."/>
         <parameter name="capacity" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" defaultValue="100" required="false" originalFieldName="capacity" description="Sets the capacity of the resequencer's inbound queue."/>
         <parameter name="ignoreInvalidExchanges" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="ignoreInvalidExchanges" description="Whether to ignore invalid exchanges"/>
         <parameter name="rejectOld" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="rejectOld" description="If true throws an exception when messages older than the last delivered message are processed"/>
      </parameters>
   </eip>
   <eip>
      <name>weighted</name>
      <tags>
         <tag>configuration</tag>
         <tag>loadbalance</tag>
      </tags>
      <title>Weighted</title>
      <description>Weighted load balancer</description>
      <class>org.apache.camel.model.loadbalancer.WeightedLoadBalancerDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="distributionRatioDelimiter" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="," required="false" originalFieldName="distributionRatioDelimiter" description="Delimiter used to specify the distribution ratio. The default value is"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="distributionRatio" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="distributionRatio" description="The distribution ratio is a delimited String consisting on integer weights separated by delimiters for example 235. The distributionRatio must match the number of endpoints and/or processors specified in the load balancer list."/>
         <parameter name="roundRobin" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="roundRobin" description="To enable round robin mode. By default the weighted distribution mode is used. The default value is false."/>
      </parameters>
   </eip>
   <eip>
      <name>bean</name>
      <tags>
         <tag>eip</tag>
         <tag>endpoint</tag>
      </tags>
      <title>Bean</title>
      <description>Calls a java bean</description>
      <class>org.apache.camel.model.BeanDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="ref" description="Sets a reference to a bean to use"/>
         <parameter name="cache" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="cache" description="Caches the bean lookup to avoid lookup up bean on every usage."/>
         <parameter name="method" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="method" description="Sets the method name on the bean to use"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="multiParameterArray" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="true" defaultValue="false" required="false" originalFieldName="multiParameterArray" description="Whether the message body is an array type."/>
         <parameter name="beanType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="beanType" description="Sets the Class of the bean"/>
      </parameters>
   </eip>
   <eip>
      <name>otherwise</name>
      <tags>
         <tag>eip</tag>
         <tag>routing</tag>
      </tags>
      <title>Otherwise</title>
      <description>Route to be executed when all other choices evaluate to false</description>
      <class>org.apache.camel.model.OtherwiseDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>univocity-tsv</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>uniVocity TSV</title>
      <description>UniVocity TSV data format</description>
      <class>org.apache.camel.model.dataformat.UniVocityTsvDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="escapeChar" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="\" required="false" originalFieldName="escapeChar" description="The escape character."/>
         <parameter name="skipEmptyLines" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="skipEmptyLines" description="Whether or not the empty lines must be ignored. The default value is true"/>
         <parameter name="headerExtractionEnabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="headerExtractionEnabled" description="Whether or not the header must be read in the first line of the test document The default value is false"/>
         <parameter name="asMap" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="asMap" description="Whether the unmarshalling should produce maps for the lines values instead of lists. It requires to have header (either defined or collected). The default value is false"/>
         <parameter name="ignoreLeadingWhitespaces" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="ignoreLeadingWhitespaces" description="Whether or not the leading white spaces must be ignored. The default value is true"/>
         <parameter name="ignoreTrailingWhitespaces" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="ignoreTrailingWhitespaces" description="Whether or not the trailing white spaces must ignored. The default value is true"/>
         <parameter name="lineSeparator" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="lineSeparator" description="The line separator of the files The default value is to use the JVM platform line separator"/>
         <parameter name="nullValue" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="nullValue" description="The string representation of a null value. The default value is null"/>
         <parameter name="lazyLoad" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="lazyLoad" description="Whether the unmarshalling should produce an iterator that reads the lines on the fly or if all the lines must be read at one. The default value is false"/>
         <parameter name="normalizedLineSeparator" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="\n" required="false" originalFieldName="normalizedLineSeparator" description="The normalized line separator of the files The default value is \n"/>
         <parameter name="emptyValue" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="emptyValue" description="The String representation of an empty value"/>
         <parameter name="headersDisabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="headersDisabled" description="Whether or not the headers are disabled. When defined this option explicitly sets the headers as null which indicates that there is no header. The default value is false"/>
         <parameter name="comment" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="#" required="false" originalFieldName="comment" description="The comment symbol. The default value is"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="numberOfRecordsToRead" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="numberOfRecordsToRead" description="The maximum number of record to read."/>
      </parameters>
   </eip>
   <eip>
      <name>ognl</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>OGNL</title>
      <description>For OGNL expressions and predicates</description>
      <class>org.apache.camel.model.language.OgnlExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>customLoadBalancer</name>
      <tags>
         <tag>configuration</tag>
         <tag>loadbalance</tag>
      </tags>
      <title>Custom Load Balancer</title>
      <description>Custom load balancer</description>
      <class>org.apache.camel.model.loadbalancer.CustomLoadBalancerDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="ref" description="Refers to the custom load balancer to lookup from the registry"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
      </parameters>
   </eip>
   <eip>
      <name>el</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>EL</title>
      <description>For EL expressions and predicates</description>
      <class>org.apache.camel.model.language.ELExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>sort</name>
      <tags>
         <tag>eip</tag>
         <tag>routing</tag>
      </tags>
      <title>Sort</title>
      <description>Sorts the contents of the message</description>
      <class>org.apache.camel.model.SortDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="expression" description="Optional expression to sort by something else than the message body"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="comparatorRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="comparatorRef" description="Sets a reference to lookup for the comparator to use for sorting"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>batch-config</name>
      <tags>
         <tag>configuration</tag>
         <tag>resequence</tag>
      </tags>
      <title>Batch-config</title>
      <description>Configures batch-processing resequence eip.</description>
      <class>org.apache.camel.model.config.BatchResequencerConfig</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="batchSize" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" defaultValue="100" required="false" originalFieldName="batchSize" description="Sets the size of the batch to be re-ordered. The default size is 100."/>
         <parameter name="reverse" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="reverse" description="Whether to reverse the ordering."/>
         <parameter name="allowDuplicates" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="allowDuplicates" description="Whether to allow duplicates."/>
         <parameter name="batchTimeout" type="integer" javaType="java.lang.Long" kind="attribute" deprecated="false" defaultValue="1000" required="false" originalFieldName="batchTimeout" description="Sets the timeout for collecting elements to be re-ordered. The default timeout is 1000 msec."/>
         <parameter name="ignoreInvalidExchanges" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="ignoreInvalidExchanges" description="Whether to ignore invalid exchanges"/>
      </parameters>
   </eip>
   <eip>
      <name>crypto</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Crypto (Java Cryptographic Extension)</title>
      <description>Crypto data format</description>
      <class>org.apache.camel.model.dataformat.CryptoDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="shouldAppendHMAC" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="shouldAppendHMAC" description="Flag indicating that a Message Authentication Code should be calculated and appended to the encrypted data."/>
         <parameter name="macAlgorithm" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="HmacSHA1" required="false" originalFieldName="macAlgorithm" description="The JCE algorithm name indicating the Message Authentication algorithm."/>
         <parameter name="inline" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="inline" description="Flag indicating that the configured IV should be inlined into the encrypted data stream. Is by default false."/>
         <parameter name="algorithmParameterRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="algorithmParameterRef" description="A JCE AlgorithmParameterSpec used to initialize the Cipher. Will lookup the type using the given name as a java.security.spec.AlgorithmParameterSpec type."/>
         <parameter name="cryptoProvider" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="cryptoProvider" description="The name of the JCE Security Provider that should be used."/>
         <parameter name="initVectorRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="initVectorRef" description="Refers to a byte array containing the Initialization Vector that will be used to initialize the Cipher."/>
         <parameter name="keyRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="keyRef" description="Refers to the secret key to lookup from the register to use."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="buffersize" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="buffersize" description="The size of the buffer used in the signature process."/>
         <parameter name="algorithm" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="DES/CBC/PKCS5Padding" required="false" originalFieldName="algorithm" description="The JCE algorithm name indicating the cryptographic algorithm that will be used. Is by default DES/CBC/PKCS5Padding."/>
      </parameters>
   </eip>
   <eip>
      <name>removeHeader</name>
      <tags>
         <tag>eip</tag>
         <tag>transformation</tag>
      </tags>
      <title>Remove Header</title>
      <description>Removes a named header from the message</description>
      <class>org.apache.camel.model.RemoveHeaderDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="headerName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="headerName" description="Name of header to remove"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>soapjaxb</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>SOAP</title>
      <description>SOAP data format</description>
      <class>org.apache.camel.model.dataformat.SoapJaxbDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="schema" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="schema" description="To validate against an existing schema. Your can use the prefix classpath: file: or http: to specify how the resource should by resolved. You can separate multiple schema files by using the '' character."/>
         <parameter name="namespacePrefixRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="namespacePrefixRef" description="When marshalling using JAXB or SOAP then the JAXB implementation will automatic assign namespace prefixes such as ns2 ns3 ns4 etc. To control this mapping Camel allows you to refer to a map which contains the desired mapping."/>
         <parameter name="elementNameStrategyRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="elementNameStrategyRef" description="Refers to an element strategy to lookup from the registry. An element name strategy is used for two purposes. The first is to find a xml element name for a given object and soap action when marshaling the object into a SOAP message. The second is to find an Exception class for a given soap fault name. The following three element strategy class name is provided out of the box. QNameStrategy - Uses a fixed qName that is configured on instantiation. Exception lookup is not supported TypeNameStrategy - Uses the name and namespace from the XMLType annotation of the given type. If no namespace is set then package-info is used. Exception lookup is not supported ServiceInterfaceStrategy - Uses information from a webservice interface to determine the type name and to find the exception class for a SOAP fault All three classes is located in the package name org.apache.camel.dataformat.soap.name If you have generated the web service stub code with cxf-codegen or a similar tool then you probably will want to use the ServiceInterfaceStrategy. In the case you have no annotated service interface you should use QNameStrategy or TypeNameStrategy."/>
         <parameter name="contextPath" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="contextPath" description="Package name where your JAXB classes are located."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="encoding" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="encoding" description="To overrule and use a specific encoding"/>
         <parameter name="version" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="1.1" required="false" originalFieldName="version" description="SOAP version should either be 1.1 or 1.2. Is by default 1.1"/>
      </parameters>
   </eip>
   <eip>
      <name>hl7</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
         <tag>hl7</tag>
      </tags>
      <title>HL7</title>
      <description>HL7 data format</description>
      <class>org.apache.camel.model.dataformat.HL7DataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="validate" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="validate" description="Whether to validate the HL7 message Is by default true."/>
      </parameters>
   </eip>
   <eip>
      <name>univocity-fixed</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>uniVocity Fixed Length</title>
      <description>UniVocity fixed-width data format</description>
      <class>org.apache.camel.model.dataformat.UniVocityFixedWidthDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="recordEndsOnNewline" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="recordEndsOnNewline" description="Whether or not the record ends on new line. The default value is false"/>
         <parameter name="padding" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue=" " required="false" originalFieldName="padding" description="The padding character. The default value is a space"/>
         <parameter name="skipEmptyLines" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="skipEmptyLines" description="Whether or not the empty lines must be ignored. The default value is true"/>
         <parameter name="headerExtractionEnabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="headerExtractionEnabled" description="Whether or not the header must be read in the first line of the test document The default value is false"/>
         <parameter name="asMap" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="asMap" description="Whether the unmarshalling should produce maps for the lines values instead of lists. It requires to have header (either defined or collected). The default value is false"/>
         <parameter name="ignoreLeadingWhitespaces" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="ignoreLeadingWhitespaces" description="Whether or not the leading white spaces must be ignored. The default value is true"/>
         <parameter name="ignoreTrailingWhitespaces" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="ignoreTrailingWhitespaces" description="Whether or not the trailing white spaces must ignored. The default value is true"/>
         <parameter name="lineSeparator" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="lineSeparator" description="The line separator of the files The default value is to use the JVM platform line separator"/>
         <parameter name="nullValue" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="nullValue" description="The string representation of a null value. The default value is null"/>
         <parameter name="lazyLoad" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="lazyLoad" description="Whether the unmarshalling should produce an iterator that reads the lines on the fly or if all the lines must be read at one. The default value is false"/>
         <parameter name="normalizedLineSeparator" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="\n" required="false" originalFieldName="normalizedLineSeparator" description="The normalized line separator of the files The default value is \n"/>
         <parameter name="emptyValue" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="emptyValue" description="The String representation of an empty value"/>
         <parameter name="headersDisabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="headersDisabled" description="Whether or not the headers are disabled. When defined this option explicitly sets the headers as null which indicates that there is no header. The default value is false"/>
         <parameter name="comment" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="#" required="false" originalFieldName="comment" description="The comment symbol. The default value is"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="numberOfRecordsToRead" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="numberOfRecordsToRead" description="The maximum number of record to read."/>
         <parameter name="skipTrailingCharsUntilNewline" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="skipTrailingCharsUntilNewline" description="Whether or not the trailing characters until new line must be ignored. The default value is false"/>
      </parameters>
   </eip>
   <eip>
      <name>failover</name>
      <tags>
         <tag>configuration</tag>
         <tag>loadbalance</tag>
      </tags>
      <title>Failover</title>
      <description>Failover load balancer</description>
      <class>org.apache.camel.model.loadbalancer.FailoverLoadBalancerDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="exception" type="array" javaType="java.util.List&lt;java.lang.String&gt;" kind="element" deprecated="false" required="false" originalFieldName="exception" description="A list of class names for specific exceptions to monitor. If no exceptions is configured then all exceptions is monitored"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="maximumFailoverAttempts" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" defaultValue="-1" required="false" originalFieldName="maximumFailoverAttempts" description="A value to indicate after X failover attempts we should exhaust (give up). Use -1 to indicate never give up and continuously try to failover. Use 0 to never failover. And use e.g. 3 to failover at most 3 times before giving up. his option can be used whether or not roundRobin is enabled or not."/>
         <parameter name="roundRobin" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="roundRobin" description="Whether or not the failover load balancer should operate in round robin mode or not. If not then it will always start from the first endpoint when a new message is to be processed. In other words it restart from the top for every message. If round robin is enabled then it keeps state and will continue with the next endpoint in a round robin fashion. When using round robin it will not stick to last known good endpoint it will always pick the next endpoint to use."/>
      </parameters>
   </eip>
   <eip>
      <name>header</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>Header</title>
      <description>An expression which extracts the named exchange header</description>
      <class>org.apache.camel.model.language.HeaderExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>routeBuilder</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>Route Builder</title>
      <description>To refer to a Java org.apache.camel.builder.RouteBuilder instance to use.</description>
      <class>org.apache.camel.model.RouteBuilderDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="ref" description="Reference to the route builder instance"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
      </parameters>
   </eip>
   <eip>
      <name>topic</name>
      <tags>
         <tag>configuration</tag>
         <tag>loadbalance</tag>
      </tags>
      <title>Topic</title>
      <description>Topic load balancer</description>
      <class>org.apache.camel.model.loadbalancer.TopicLoadBalancerDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
      </parameters>
   </eip>
   <eip>
      <name>removeProperty</name>
      <tags>
         <tag>eip</tag>
         <tag>transformation</tag>
      </tags>
      <title>Remove Property</title>
      <description>Removes a named property from the message exchange</description>
      <class>org.apache.camel.model.RemovePropertyDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="propertyName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="propertyName" description="Name of property to remove"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>threadPoolProfile</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>Thread Pool Profile</title>
      <description>To configure thread pools</description>
      <class>org.apache.camel.model.ThreadPoolProfileDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="keepAliveTime" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="keepAliveTime" description="Sets the keep alive time for idle threads in the pool"/>
         <parameter name="maxQueueSize" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="maxQueueSize" description="Sets the maximum number of tasks in the work queue. Use -1 or Integer.MAX_VALUE for an unbounded queue"/>
         <parameter name="allowCoreThreadTimeOut" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="allowCoreThreadTimeOut" description="Whether idle core threads is allowed to timeout and therefore can shrink the pool size below the core pool size Is by default false"/>
         <parameter name="poolSize" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="poolSize" description="Sets the core pool size"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="defaultProfile" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="defaultProfile" description="Whether this profile is the default thread pool profile"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="maxPoolSize" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="maxPoolSize" description="Sets the maximum pool size"/>
         <parameter name="rejectedPolicy" type="string" javaType="org.apache.camel.ThreadPoolRejectedPolicy" kind="attribute" choice="Abort,CallerRuns,Discard,DiscardOldest" deprecated="false" required="false" originalFieldName="rejectedPolicy" description="Sets the handler for tasks which cannot be executed by the thread pool."/>
      </parameters>
   </eip>
   <eip>
      <name>onCompletion</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>On Completion</title>
      <description>Route to be executed when normal route processing completes</description>
      <class>org.apache.camel.model.OnCompletionDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="mode" type="string" javaType="org.apache.camel.model.OnCompletionMode" kind="attribute" choice="AfterConsumer,BeforeConsumer" deprecated="false" defaultValue="AfterConsumer" required="false" originalFieldName="mode" description="Sets the on completion mode. The default value is AfterConsumer"/>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="executorServiceRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="executorServiceRef" description="Refers to a custom Thread Pool to be used for parallel processing. Notice if you set this option then parallel processing is automatic implied and you do not have to enable that option as well."/>
         <parameter name="onCompleteOnly" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="onCompleteOnly" description="Will only synchronize when the org.apache.camel.Exchange completed successfully (no errors)."/>
         <parameter name="parallelProcessing" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="parallelProcessing" description="If enabled then the on completion process will run asynchronously by a separate thread from a thread pool. By default this is false meaning the on completion process will run synchronously using the same caller thread as from the route."/>
         <parameter name="onWhen" type="object" javaType="org.apache.camel.model.WhenDefinition" kind="element" deprecated="false" required="false" originalFieldName="onWhen" description="Sets an additional predicate that should be true before the onCompletion is triggered. To be used for fine grained controlling whether a completion callback should be invoked or not"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="useOriginalMessage" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="useOriginalMessage" description="Will use the original input body when an org.apache.camel.Exchange for this on completion. By default this feature is off."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="onFailureOnly" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="onFailureOnly" description="Will only synchronize when the org.apache.camel.Exchange ended with failure (exception or FAULT message)."/>
      </parameters>
   </eip>
   <eip>
      <name>doFinally</name>
      <tags>
         <tag>error</tag>
      </tags>
      <title>Do Finally</title>
      <description>Path traversed when a try catch finally block exits</description>
      <class>org.apache.camel.model.FinallyDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>jxpath</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>JXPath</title>
      <description>For JXPath expressions and predicates</description>
      <class>org.apache.camel.model.language.JXPathExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="lenient" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="lenient" description="Allows to turn lenient on the JXPathContext. When turned on this allows the JXPath expression to evaluate against expressions and message bodies which may be invalid / missing data. This option is by default false"/>
      </parameters>
   </eip>
   <eip>
      <name>string</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>String Encoding</title>
      <description>Represents the String (text based) DataFormat</description>
      <class>org.apache.camel.model.dataformat.StringDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="charset" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="charset" description="Sets an encoding to use. Will by default use the JVM platform default charset."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
      </parameters>
   </eip>
   <eip>
      <name>doCatch</name>
      <tags>
         <tag>error</tag>
      </tags>
      <title>Do Catch</title>
      <description>Catches exceptions as part of a try catch finally block</description>
      <class>org.apache.camel.model.CatchDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="exception" type="array" javaType="java.util.List&lt;java.lang.String&gt;" kind="element" deprecated="false" required="false" originalFieldName="exception" description="The exception(s) to catch."/>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="handled" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="false" originalFieldName="handled" description="Sets whether the exchange should be marked as handled or not."/>
         <parameter name="onWhen" type="object" javaType="org.apache.camel.model.WhenDefinition" kind="element" deprecated="false" required="false" originalFieldName="onWhen" description="Sets an additional predicate that should be true before the onCatch is triggered. To be used for fine grained controlling whether a thrown exception should be intercepted by this exception type or not."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>description</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>Description</title>
      <description>To provide comments about the node.</description>
      <class>org.apache.camel.model.DescriptionDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="layoutHeight" type="number" javaType="java.lang.Double" kind="attribute" deprecated="true" required="false" originalFieldName="layoutHeight" description="Layout height"/>
         <parameter name="layoutX" type="number" javaType="java.lang.Double" kind="attribute" deprecated="true" required="false" originalFieldName="layoutX" description="Layout position X"/>
         <parameter name="layoutY" type="number" javaType="java.lang.Double" kind="attribute" deprecated="true" required="false" originalFieldName="layoutY" description="Layout position Y"/>
         <parameter name="text" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="text" description="The description as human readable text"/>
         <parameter name="lang" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="lang" description="Language such as en for english."/>
         <parameter name="layoutWidth" type="number" javaType="java.lang.Double" kind="attribute" deprecated="true" required="false" originalFieldName="layoutWidth" description="Layout width"/>
      </parameters>
   </eip>
   <eip>
      <name>transacted</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>Transacted</title>
      <description>Enables transaction on the route</description>
      <class>org.apache.camel.model.TransactedDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="ref" description="Sets a reference to use for lookup the policy in the registry."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>removeHeaders</name>
      <tags>
         <tag>eip</tag>
         <tag>transformation</tag>
      </tags>
      <title>Remove Headers</title>
      <description>Removes message headers whose name matches a specified pattern</description>
      <class>org.apache.camel.model.RemoveHeadersDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="pattern" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="pattern" description="Name or pattern of headers to remove"/>
         <parameter name="excludePattern" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="excludePattern" description="Name or patter of headers to not remove"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>delete</name>
      <tags>
         <tag>rest</tag>
      </tags>
      <title>Delete</title>
      <description>Rest DELETE command</description>
      <class>org.apache.camel.model.rest.DeleteVerbDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="enableCORS" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="enableCORS" description="Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false."/>
         <parameter name="method" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="method" description="The HTTP verb such as GET or POST"/>
         <parameter name="bindingMode" type="string" javaType="org.apache.camel.model.rest.RestBindingMode" kind="attribute" choice="auto,json,json_xml,off,xml" deprecated="false" defaultValue="auto" required="false" originalFieldName="bindingMode" description="Sets the binding mode to use. This option will override what may be configured on a parent level The default value is auto"/>
         <parameter name="skipBindingOnErrorCode" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="skipBindingOnErrorCode" description="Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc as success messages otherwise will do. This option will override what may be configured on a parent level"/>
         <parameter name="produces" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="produces" description="To define the content type what the REST service produces (uses for output) such as application/xml or application/json This option will override what may be configured on a parent level"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="toOrRoute" type="object" javaType="org.apache.camel.model.OptionalIdentifiedDefinition&lt;?&gt;" kind="element" oneOf="route,to" deprecated="false" required="true" originalFieldName="toOrRoute" description="To route from this REST service to a Camel endpoint or an inlined route"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="type" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="type" description="Sets the class name to use for binding from input to POJO for the incoming data This option will override what may be configured on a parent level"/>
         <parameter name="uri" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="uri" description="Uri template of this REST service such as /id."/>
         <parameter name="outType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="outType" description="Sets the class name to use for binding from POJO to output for the outgoing data This option will override what may be configured on a parent level"/>
         <parameter name="consumes" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="consumes" description="To define the content type what the REST service consumes (accept as input) such as application/xml or application/json. This option will override what may be configured on a parent level"/>
      </parameters>
   </eip>
   <eip>
      <name>aggregate</name>
      <tags>
         <tag>eip</tag>
         <tag>routing</tag>
      </tags>
      <title>Aggregate</title>
      <description>Aggregates many messages into a single message</description>
      <class>org.apache.camel.model.AggregateDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="strategyMethodAllowNull" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="strategyMethodAllowNull" description="If this option is false then the aggregate method is not used for the very first aggregation. If this option is true then null values is used as the oldExchange (at the very first aggregation) when using POJOs as the AggregationStrategy."/>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="completionFromBatchConsumer" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="completionFromBatchConsumer" description="Enables the batch completion mode where we aggregate from a org.apache.camel.BatchConsumer and aggregate the total number of exchanges the org.apache.camel.BatchConsumer has reported as total by checking the exchange property link org.apache.camel.ExchangeBATCH_COMPLETE when its complete."/>
         <parameter name="executorServiceRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="executorServiceRef" description="If using parallelProcessing you can specify a custom thread pool to be used. In fact also if you are not using parallelProcessing this custom thread pool is used to send out aggregated exchanges as well."/>
         <parameter name="closeCorrelationKeyOnCompletion" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="closeCorrelationKeyOnCompletion" description="Closes a correlation key when its complete. Any late received exchanges which has a correlation key that has been closed it will be defined and a org.apache.camel.processor.aggregate.ClosedCorrelationKeyException is thrown."/>
         <parameter name="eagerCheckCompletion" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="eagerCheckCompletion" description="Use eager completion checking which means that the completionPredicate will use the incoming Exchange. At opposed to without eager completion checking the completionPredicate will use the aggregated Exchange."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="correlationExpression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="correlationExpression" description="The expression used to calculate the correlation key to use for aggregation. The Exchange which has the same correlation key is aggregated together. If the correlation key could not be evaluated an Exception is thrown. You can disable this by using the ignoreBadCorrelationKeys option."/>
         <parameter name="completionSize" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="completionSize" description="Sets the completion size which is the number of aggregated exchanges which would cause the aggregate to consider the group as complete and send out the aggregated exchange."/>
         <parameter name="optimisticLockRetryPolicy" type="object" javaType="org.apache.camel.model.OptimisticLockRetryPolicyDefinition" kind="element" deprecated="false" required="false" originalFieldName="optimisticLockRetryPolicy" description="Allows to configure retry settings when using optimistic locking."/>
         <parameter name="strategyMethodName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="strategyMethodName" description="This option can be used to explicit declare the method name to use when using POJOs as the AggregationStrategy."/>
         <parameter name="aggregationRepositoryRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="aggregationRepositoryRef" description="Sets the custom aggregate repository to use Will by default use org.apache.camel.processor.aggregate.MemoryAggregationRepository"/>
         <parameter name="completionTimeout" type="integer" javaType="java.lang.Long" kind="attribute" deprecated="false" required="false" originalFieldName="completionTimeout" description="Sets the completion timeout which would cause the aggregate to consider the group as complete and send out the aggregated exchange."/>
         <parameter name="timeoutCheckerExecutorServiceRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="timeoutCheckerExecutorServiceRef" description="If using either of the completionTimeout completionTimeoutExpression or completionInterval options a background thread is created to check for the completion for every aggregator. Set this option to provide a custom thread pool to be used rather than creating a new thread for every aggregator."/>
         <parameter name="completionInterval" type="integer" javaType="java.lang.Long" kind="attribute" deprecated="false" required="false" originalFieldName="completionInterval" description="Sets the completion interval which would cause the aggregate to consider the group as complete and send out the aggregated exchange."/>
         <parameter name="parallelProcessing" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="parallelProcessing" description="When aggregated are completed they are being send out of the aggregator. This option indicates whether or not Camel should use a thread pool with multiple threads for concurrency. If no custom thread pool has been specified then Camel creates a default pool with 10 concurrent threads."/>
         <parameter name="ignoreInvalidCorrelationKeys" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="ignoreInvalidCorrelationKeys" description="If a correlation key cannot be successfully evaluated it will be ignored by logging a DEBUG and then just ignore the incoming Exchange."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="completionPredicate" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="false" originalFieldName="completionPredicate" description="Sets the predicate used to determine if the aggregation is completed"/>
         <parameter name="groupExchanges" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="true" defaultValue="false" required="false" originalFieldName="groupExchanges" description="Enables grouped exchanges so the aggregator will group all aggregated exchanges into a single combined Exchange holding all the aggregated exchanges in a java.util.List."/>
         <parameter name="discardOnCompletionTimeout" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="discardOnCompletionTimeout" description="Discards the aggregated message on completion timeout. This means on timeout the aggregated message is dropped and not sent out of the aggregator."/>
         <parameter name="optimisticLocking" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="optimisticLocking" description="Turns on using optimistic locking which requires the aggregationRepository being used is supporting this by implementing org.apache.camel.spi.OptimisticLockingAggregationRepository."/>
         <parameter name="strategyRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="strategyRef" description="A reference to lookup the AggregationStrategy in the Registry. Configuring an AggregationStrategy is required and is used to merge the incoming Exchange with the existing already merged exchanges. At first call the oldExchange parameter is null. On subsequent invocations the oldExchange contains the merged exchanges and newExchange is of course the new incoming Exchange."/>
         <parameter name="forceCompletionOnStop" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="forceCompletionOnStop" description="Indicates to complete all current aggregated exchanges when the context is stopped"/>
      </parameters>
   </eip>
   <eip>
      <name>packageScan</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>Package Scan</title>
      <description>Scans for Java org.apache.camel.builder.RouteBuilder classes in java packages</description>
      <class>org.apache.camel.model.PackageScanDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="package" type="array" javaType="java.util.List&lt;java.lang.String&gt;" kind="element" deprecated="false" required="true" originalFieldName="package" description="Sets the java package names to use for scanning for route builder classes"/>
         <parameter name="excludes" type="array" javaType="java.util.List&lt;java.lang.String&gt;" kind="element" deprecated="false" required="false" originalFieldName="excludes" description="Exclude finding route builder from these java package names."/>
         <parameter name="includes" type="array" javaType="java.util.List&lt;java.lang.String&gt;" kind="element" deprecated="false" required="false" originalFieldName="includes" description="Include finding route builder from these java package names."/>
      </parameters>
   </eip>
   <eip>
      <name>sql</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>SQL</title>
      <description>For SQL expressions and predicates</description>
      <class>org.apache.camel.model.language.SqlExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>head</name>
      <tags>
         <tag>rest</tag>
      </tags>
      <title>Head</title>
      <description>Rest HEAD command</description>
      <class>org.apache.camel.model.rest.HeadVerbDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="enableCORS" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="enableCORS" description="Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false."/>
         <parameter name="method" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="method" description="The HTTP verb such as GET or POST"/>
         <parameter name="bindingMode" type="string" javaType="org.apache.camel.model.rest.RestBindingMode" kind="attribute" choice="auto,json,json_xml,off,xml" deprecated="false" defaultValue="auto" required="false" originalFieldName="bindingMode" description="Sets the binding mode to use. This option will override what may be configured on a parent level The default value is auto"/>
         <parameter name="skipBindingOnErrorCode" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="skipBindingOnErrorCode" description="Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc as success messages otherwise will do. This option will override what may be configured on a parent level"/>
         <parameter name="produces" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="produces" description="To define the content type what the REST service produces (uses for output) such as application/xml or application/json This option will override what may be configured on a parent level"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="toOrRoute" type="object" javaType="org.apache.camel.model.OptionalIdentifiedDefinition&lt;?&gt;" kind="element" oneOf="route,to" deprecated="false" required="true" originalFieldName="toOrRoute" description="To route from this REST service to a Camel endpoint or an inlined route"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="type" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="type" description="Sets the class name to use for binding from input to POJO for the incoming data This option will override what may be configured on a parent level"/>
         <parameter name="uri" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="uri" description="Uri template of this REST service such as /id."/>
         <parameter name="outType" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="outType" description="Sets the class name to use for binding from POJO to output for the outgoing data This option will override what may be configured on a parent level"/>
         <parameter name="consumes" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="consumes" description="To define the content type what the REST service consumes (accept as input) such as application/xml or application/json. This option will override what may be configured on a parent level"/>
      </parameters>
   </eip>
   <eip>
      <name>resequence</name>
      <tags>
         <tag>eip</tag>
         <tag>routing</tag>
      </tags>
      <title>Resequence</title>
      <description>Resequences (re-order) messages based on an expression</description>
      <class>org.apache.camel.model.ResequenceDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="expression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="expression" description="Expression to use for re-ordering the messages such as a header with a sequence number"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="resequencerConfig" type="object" javaType="org.apache.camel.model.config.ResequencerConfig" kind="element" oneOf="batch-config,stream-config" deprecated="false" required="false" originalFieldName="resequencerConfig" description="To configure the resequencer in using either batch or stream configuration. Will by default use batch configuration."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>random</name>
      <tags>
         <tag>configuration</tag>
         <tag>loadbalance</tag>
      </tags>
      <title>Random</title>
      <description>Random load balancer</description>
      <class>org.apache.camel.model.loadbalancer.RandomLoadBalancerDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
      </parameters>
   </eip>
   <eip>
      <name>routingSlip</name>
      <tags>
         <tag>eip</tag>
         <tag>endpoint</tag>
         <tag>routing</tag>
      </tags>
      <title>Routing Slip</title>
      <description>Routes a message through a series of steps that are pre-determined (the slip)</description>
      <class>org.apache.camel.model.RoutingSlipDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="uriDelimiter" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="," required="false" originalFieldName="uriDelimiter" description="Sets the uri delimiter to use"/>
         <parameter name="ignoreInvalidEndpoints" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="ignoreInvalidEndpoints" description="Ignore the invalidate endpoint exception when try to create a producer with that endpoint"/>
         <parameter name="cacheSize" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="cacheSize" description="Sets the maximum size used by the org.apache.camel.impl.ProducerCache which is used to cache and reuse producers when using this recipient list when uris are reused."/>
         <parameter name="expression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="expression" description="Expression to define the routing slip which defines which endpoints to route the message in a pipeline style. Notice the expression is evaluated once if you want a more dynamic style then the dynamic router eip is a better choice."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>transform</name>
      <tags>
         <tag>eip</tag>
         <tag>transformation</tag>
      </tags>
      <title>Transform</title>
      <description>Transforms the message body based on an expression</description>
      <class>org.apache.camel.model.TransformDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="expression" description="Expression to return the transformed message body (the new message body to use)"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>json</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>JSon</title>
      <description>Json data format</description>
      <class>org.apache.camel.model.dataformat.JsonDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="include" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="include" description="If you want to marshal a pojo to JSON and the pojo has some fields with null values. And you want to skip these null values you can set this option to NOT_NULL"/>
         <parameter name="prettyPrint" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="prettyPrint" description="To enable pretty printing output nicely formatted. Is by default false."/>
         <parameter name="unmarshalTypeName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="unmarshalTypeName" description="Class name of the java type to use when unarmshalling"/>
         <parameter name="jsonView" type="string" javaType="java.lang.Class&lt;?&gt;" kind="attribute" deprecated="false" required="false" originalFieldName="jsonView" description="When marshalling a POJO to JSON you might want to exclude certain fields from the JSON output. With Jackson you can use JSON views to accomplish this. This option is to refer to the class which has JsonView annotations"/>
         <parameter name="moduleClassNames" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="moduleClassNames" description="To use custom Jackson modules com.fasterxml.jackson.databind.Module specified as a String with FQN class names. Multiple classes can be separated by comma."/>
         <parameter name="collectionTypeName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="collectionTypeName" description="Refers to a custom collection type to lookup in the registry to use. This option should rarely be used but allows to use different collection types than java.util.Collection based as default."/>
         <parameter name="allowJmsType" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="allowJmsType" description="Used for JMS users to allow the JMSType header from the JMS spec to specify a FQN classname to use to unmarshal to."/>
         <parameter name="useList" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="useList" description="To unarmshal to a List of Map or a List of Pojo."/>
         <parameter name="enableFeatures" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="enableFeatures" description="Set of features to enable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature com.fasterxml.jackson.databind.DeserializationFeature or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma"/>
         <parameter name="moduleRefs" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="moduleRefs" description="To use custom Jackson modules referred from the Camel registry. Multiple modules can be separated by comma."/>
         <parameter name="disableFeatures" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="disableFeatures" description="Set of features to disable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature com.fasterxml.jackson.databind.DeserializationFeature or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma"/>
         <parameter name="library" type="string" javaType="org.apache.camel.model.dataformat.JsonLibrary" kind="attribute" choice="Gson,Jackson,XStream" deprecated="false" defaultValue="XStream" required="false" originalFieldName="library" description="Which json library to use such. Is by default xstream"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="enableJaxbAnnotationModule" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="enableJaxbAnnotationModule" description="Whether to enable the JAXB annotations module when using jackson. When enabled then JAXB annotations can be used by Jackson."/>
      </parameters>
   </eip>
   <eip>
      <name>rest</name>
      <tags>
         <tag>rest</tag>
      </tags>
      <title>Rest</title>
      <description>Defines a rest service using the rest-dsl</description>
      <class>org.apache.camel.model.rest.RestDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>true</output>
         <parameters>
         <parameter name="enableCORS" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="enableCORS" description="Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false."/>
         <parameter name="path" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="path" description="Path of the rest service such as /foo"/>
         <parameter name="bindingMode" type="string" javaType="org.apache.camel.model.rest.RestBindingMode" kind="attribute" choice="auto,json,json_xml,off,xml" deprecated="false" defaultValue="auto" required="false" originalFieldName="bindingMode" description="Sets the binding mode to use. This option will override what may be configured on a parent level The default value is auto"/>
         <parameter name="skipBindingOnErrorCode" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="skipBindingOnErrorCode" description="Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc as success messages otherwise will do. This option will override what may be configured on a parent level"/>
         <parameter name="produces" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="produces" description="To define the content type what the REST service produces (uses for output) such as application/xml or application/json This option will override what may be configured on a parent level"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="consumes" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="consumes" description="To define the content type what the REST service consumes (accept as input) such as application/xml or application/json. This option will override what may be configured on a parent level"/>
      </parameters>
   </eip>
   <eip>
      <name>process</name>
      <tags>
         <tag>eip</tag>
         <tag>endpoint</tag>
      </tags>
      <title>Process</title>
      <description>Calls a Camel processor.</description>
      <class>org.apache.camel.model.ProcessDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="ref" description="Reference to the Processor to lookup in the registry to use."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>jibx</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>JiBX</title>
      <description>JiBX data format</description>
      <class>org.apache.camel.model.dataformat.JibxDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="unmarshallClass" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="unmarshallClass" description="Class name to use when unmarshalling from XML to Java."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="bindingName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="bindingName" description="To use a custom binding factory"/>
      </parameters>
   </eip>
   <eip>
      <name>univocity-header</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>uniVocity Header</title>
      <description>To configure headers for UniVocity data formats.</description>
      <class>org.apache.camel.model.dataformat.UniVocityHeader</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="name" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="name" description="Header name"/>
         <parameter name="length" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="length" description="Header length"/>
      </parameters>
   </eip>
   <eip>
      <name>flatpack</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Flatpack</title>
      <description>Flatpack data format</description>
      <class>org.apache.camel.model.dataformat.FlatpackDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="allowShortLines" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="allowShortLines" description="Allows for lines to be shorter than expected and ignores the extra characters"/>
         <parameter name="delimiter" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="," required="false" originalFieldName="delimiter" description="The delimiter char (could be ; or similar)"/>
         <parameter name="definition" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="definition" description="The flatpack pzmap configuration file. Can be omitted in simpler situations but its preferred to use the pzmap."/>
         <parameter name="fixed" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="fixed" description="Delimited or fixed. Is by default false = delimited"/>
         <parameter name="ignoreFirstRecord" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="ignoreFirstRecord" description="Whether the first line is ignored for delimited files (for the column headers). Is by default true."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="parserFactoryRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="parserFactoryRef" description="References to a custom parser factory to lookup in the registry"/>
         <parameter name="textQualifier" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="&quot;" required="false" originalFieldName="textQualifier" description="If the text is qualified with a char such as &quot;"/>
         <parameter name="ignoreExtraColumns" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="ignoreExtraColumns" description="Allows for lines to be longer than expected and ignores the extra characters."/>
      </parameters>
   </eip>
   <eip>
      <name>threads</name>
      <tags>
         <tag>eip</tag>
         <tag>routing</tag>
      </tags>
      <title>Threads</title>
      <description>Specifies that all steps after this node are processed asynchronously</description>
      <class>org.apache.camel.model.ThreadsDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="executorServiceRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="executorServiceRef" description="To refer to a custom thread pool or use a thread pool profile (as overlay)"/>
         <parameter name="keepAliveTime" type="integer" javaType="java.lang.Long" kind="attribute" deprecated="false" required="false" originalFieldName="keepAliveTime" description="Sets the keep alive time for idle threads"/>
         <parameter name="callerRunsWhenRejected" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="callerRunsWhenRejected" description="Whether or not the caller should run the task when it was rejected by the thread pool. Is by default true"/>
         <parameter name="poolSize" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="poolSize" description="Sets the core pool size"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="threadName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="Threads" required="false" originalFieldName="threadName" description="Sets the thread name to use."/>
         <parameter name="rejectedPolicy" type="string" javaType="org.apache.camel.ThreadPoolRejectedPolicy" kind="attribute" choice="Abort,CallerRuns,Discard,DiscardOldest" deprecated="false" required="false" originalFieldName="rejectedPolicy" description="Sets the handler for tasks which cannot be executed by the thread pool."/>
         <parameter name="maxQueueSize" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="maxQueueSize" description="Sets the maximum number of tasks in the work queue. Use -1 or Integer.MAX_VALUE for an unbounded queue"/>
         <parameter name="allowCoreThreadTimeOut" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="allowCoreThreadTimeOut" description="Whether idle core threads is allowed to timeout and therefore can shrink the pool size below the core pool size Is by default false"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="maxPoolSize" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="maxPoolSize" description="Sets the maximum pool size"/>
         <parameter name="timeUnit" type="string" javaType="java.util.concurrent.TimeUnit" kind="attribute" choice="DAYS,HOURS,MICROSECONDS,MILLISECONDS,MINUTES,NANOSECONDS,SECONDS" deprecated="false" required="false" originalFieldName="timeUnit" description="Sets the keep alive time unit. By default SECONDS is used."/>
      </parameters>
   </eip>
   <eip>
      <name>throwException</name>
      <tags>
         <tag>error</tag>
      </tags>
      <title>Throw Exception</title>
      <description>Throws an exception</description>
      <class>org.apache.camel.model.ThrowExceptionDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="true" originalFieldName="ref" description="Reference to the exception instance to lookup from the registry to throw"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>multicast</name>
      <tags>
         <tag>eip</tag>
         <tag>routing</tag>
      </tags>
      <title>Multicast</title>
      <description>Routes the same message to multiple paths either sequentially or in parallel.</description>
      <class>org.apache.camel.model.MulticastDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>true</output>
         <parameters>
         <parameter name="strategyMethodAllowNull" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="strategyMethodAllowNull" description="If this option is false then the aggregate method is not used if there was no data to enrich. If this option is true then null values is used as the oldExchange (when no data to enrich) when using POJOs as the AggregationStrategy"/>
         <parameter name="outputs" type="array" javaType="java.util.List&lt;org.apache.camel.model.ProcessorDefinition&lt;?&gt;&gt;" kind="element" oneOf="aggregate,aop,bean,choice,convertBodyTo,delay,doCatch,doFinally,doTry,dynamicRouter,enrich,filter,idempotentConsumer,inOnly,inOut,intercept,interceptFrom,interceptSendToEndpoint,loadBalance,log,loop,marshal,multicast,onCompletion,onException,otherwise,pipeline,policy,pollEnrich,process,recipientList,removeHeader,removeHeaders,removeProperties,removeProperty,resequence,rollback,routingSlip,sample,setBody,setExchangePattern,setFaultBody,setHeader,setOutHeader,setProperty,sort,split,stop,threads,throttle,throwException,to,transacted,transform,unmarshal,validate,when,whenSkipSendToEndpoint,wireTap" deprecated="false" required="true" originalFieldName="outputs" description=""/>
         <parameter name="executorServiceRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="executorServiceRef" description="Refers to a custom Thread Pool to be used for parallel processing. Notice if you set this option then parallel processing is automatic implied and you do not have to enable that option as well."/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="strategyMethodName" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="strategyMethodName" description="This option can be used to explicit declare the method name to use when using POJOs as the AggregationStrategy."/>
         <parameter name="timeout" type="integer" javaType="java.lang.Long" kind="attribute" deprecated="false" defaultValue="0" required="false" originalFieldName="timeout" description="Sets a total timeout specified in millis when using parallel processing. If the Multicast hasn't been able to send and process all replies within the given timeframe then the timeout triggers and the Multicast breaks out and continues. Notice if you provide a TimeoutAwareAggregationStrategy then the timeout method is invoked before breaking out. If the timeout is reached with running tasks still remaining certain tasks for which it is difficult for Camel to shut down in a graceful manner may continue to run. So use this option with a bit of care."/>
         <parameter name="onPrepareRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="onPrepareRef" description="Uses the Processor when preparing the org.apache.camel.Exchange to be send. This can be used to deep-clone messages that should be send or any custom logic needed before the exchange is send."/>
         <parameter name="streaming" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="streaming" description="If enabled then Camel will process replies out-of-order eg in the order they come back. If disabled Camel will process replies in the same order as defined by the multicast."/>
         <parameter name="stopOnException" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="stopOnException" description="Will now stop further processing if an exception or failure occurred during processing of an org.apache.camel.Exchange and the caused exception will be thrown. Will also stop if processing the exchange failed (has a fault message) or an exception was thrown and handled by the error handler (such as using onException). In all situations the multicast will stop further processing. This is the same behavior as in pipeline which is used by the routing engine. The default behavior is to not stop but continue processing till the end"/>
         <parameter name="parallelProcessing" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="parallelProcessing" description="If enabled then sending messages to the multicasts occurs concurrently. Note the caller thread will still wait until all messages has been fully processed before it continues. Its only the sending and processing the replies from the multicasts which happens concurrently."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
         <parameter name="parallelAggregate" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="parallelAggregate" description="If enabled then the aggregate method on AggregationStrategy can be called concurrently. Notice that this would require the implementation of AggregationStrategy to be implemented as thread-safe. By default this is false meaning that Camel synchronizes the call to the aggregate method. Though in some use-cases this can be used to archive higher performance when the AggregationStrategy is implemented as thread-safe."/>
         <parameter name="strategyRef" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="strategyRef" description="Refers to an AggregationStrategy to be used to assemble the replies from the multicasts into a single outgoing message from the Multicast. By default Camel will use the last reply as the outgoing message. You can also use a POJO as the AggregationStrategy"/>
         <parameter name="shareUnitOfWork" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="shareUnitOfWork" description="Shares the org.apache.camel.spi.UnitOfWork with the parent and each of the sub messages. Multicast will by default not share unit of work between the parent exchange and each multicasted exchange. This means each sub exchange has its own individual unit of work."/>
      </parameters>
   </eip>
   <eip>
      <name>ruby</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>Ruby</title>
      <description>For Ruby expressions and predicates</description>
      <class>org.apache.camel.model.language.RubyExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>serialization</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>Java Object Serialization</title>
      <description>Java Object Serialization data format</description>
      <class>org.apache.camel.model.dataformat.SerializationDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
      </parameters>
   </eip>
   <eip>
      <name>spel</name>
      <tags>
         <tag>language</tag>
      </tags>
      <title>SpEL</title>
      <description>For Spring Expression Language (SpEL) expressions and predicates</description>
      <class>org.apache.camel.model.language.SpELExpression</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="string" javaType="java.lang.String" kind="value" deprecated="false" required="true" originalFieldName="expression" description="The expression value in your chosen language syntax"/>
         <parameter name="trim" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="trim" description="Whether to trim the value to remove leading and trailing whitespaces and line breaks"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>univocity-csv</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>uniVocity CSV</title>
      <description>UniVocity CSV data format</description>
      <class>org.apache.camel.model.dataformat.UniVocityCsvDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="skipEmptyLines" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="skipEmptyLines" description="Whether or not the empty lines must be ignored. The default value is true"/>
         <parameter name="headerExtractionEnabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="headerExtractionEnabled" description="Whether or not the header must be read in the first line of the test document The default value is false"/>
         <parameter name="asMap" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="asMap" description="Whether the unmarshalling should produce maps for the lines values instead of lists. It requires to have header (either defined or collected). The default value is false"/>
         <parameter name="ignoreLeadingWhitespaces" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="ignoreLeadingWhitespaces" description="Whether or not the leading white spaces must be ignored. The default value is true"/>
         <parameter name="ignoreTrailingWhitespaces" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="true" required="false" originalFieldName="ignoreTrailingWhitespaces" description="Whether or not the trailing white spaces must ignored. The default value is true"/>
         <parameter name="lineSeparator" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="lineSeparator" description="The line separator of the files The default value is to use the JVM platform line separator"/>
         <parameter name="quoteAllFields" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="quoteAllFields" description="Whether or not all values must be quoted when writing them."/>
         <parameter name="nullValue" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="nullValue" description="The string representation of a null value. The default value is null"/>
         <parameter name="lazyLoad" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="lazyLoad" description="Whether the unmarshalling should produce an iterator that reads the lines on the fly or if all the lines must be read at one. The default value is false"/>
         <parameter name="normalizedLineSeparator" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="\n" required="false" originalFieldName="normalizedLineSeparator" description="The normalized line separator of the files The default value is \n"/>
         <parameter name="quote" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="&quot;" required="false" originalFieldName="quote" description="The quote symbol."/>
         <parameter name="quoteEscape" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="&quot;" required="false" originalFieldName="quoteEscape" description="The quote escape symbol"/>
         <parameter name="emptyValue" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="emptyValue" description="The String representation of an empty value"/>
         <parameter name="delimiter" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="," required="false" originalFieldName="delimiter" description="The delimiter of values"/>
         <parameter name="headersDisabled" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="headersDisabled" description="Whether or not the headers are disabled. When defined this option explicitly sets the headers as null which indicates that there is no header. The default value is false"/>
         <parameter name="comment" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" defaultValue="#" required="false" originalFieldName="comment" description="The comment symbol. The default value is"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
         <parameter name="numberOfRecordsToRead" type="integer" javaType="java.lang.Integer" kind="attribute" deprecated="false" required="false" originalFieldName="numberOfRecordsToRead" description="The maximum number of record to read."/>
      </parameters>
   </eip>
   <eip>
      <name>ical</name>
      <tags>
         <tag>dataformat</tag>
         <tag>transformation</tag>
      </tags>
      <title>iCal</title>
      <description>iCal data format</description>
      <class>org.apache.camel.model.dataformat.IcalDataFormat</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="validating" type="boolean" javaType="java.lang.Boolean" kind="attribute" deprecated="false" defaultValue="false" required="false" originalFieldName="validating" description="Whether to validate."/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the value of the id property."/>
      </parameters>
   </eip>
   <eip>
      <name>unmarshal</name>
      <tags>
         <tag>eip</tag>
         <tag>transformation</tag>
      </tags>
      <title>Unmarshal</title>
      <description>Converts the message data received from the wire into a format that Apache Camel processors can consume</description>
      <class>org.apache.camel.model.UnmarshalDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="ref" type="string" javaType="java.lang.String" kind="attribute" deprecated="true" required="false" originalFieldName="ref" description="To refer to a custom data format to use as unmarshaller"/>
         <parameter name="dataFormatType" type="object" javaType="org.apache.camel.model.DataFormatDefinition" kind="element" oneOf="avro,base64,beanio,bindy,castor,crypto,csv,custom,flatpack,gzip,hl7,ical,jaxb,jibx,json,pgp,protobuf,rss,secureXML,serialization,soapjaxb,string,syslog,tidyMarkup,univocity-csv,univocity-fixed,univocity-tsv,xmlBeans,xmljson,xmlrpc,xstream,zip,zipFile" deprecated="false" required="true" originalFieldName="dataFormatType" description="The data format to be used"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>setFaultBody</name>
      <tags>
         <tag>eip</tag>
         <tag>transformation</tag>
      </tags>
      <title>Set Fault Body</title>
      <description>Sets the contents of a fault message's body</description>
      <class>org.apache.camel.model.SetFaultBodyDefinition</class>
      <kind>model</kind>
      <input>true</input>
      <output>false</output>
         <parameters>
         <parameter name="expression" type="object" javaType="org.apache.camel.model.language.ExpressionDefinition" kind="expression" oneOf="constant,el,exchangeProperty,groovy,header,javaScript,jsonpath,jxpath,language,method,mvel,ognl,php,python,ref,ruby,simple,spel,sql,terser,tokenize" deprecated="false" required="true" originalFieldName="expression" description="Expression that returns the new fault body to use"/>
         <parameter name="description" type="object" javaType="org.apache.camel.model.DescriptionDefinition" kind="element" deprecated="false" required="false" originalFieldName="description" description="Sets the description of this node"/>
         <parameter name="id" type="string" javaType="java.lang.String" kind="attribute" deprecated="false" required="false" originalFieldName="id" description="Sets the id of this node"/>
      </parameters>
   </eip>
   <eip>
      <name>properties</name>
      <tags>
         <tag>configuration</tag>
      </tags>
      <title>Properties</title>
      <description>A series of key value pair</description>
      <class>org.apache.camel.model.PropertiesDefinition</class>
      <kind>model</kind>
      <input>false</input>
      <output>false</output>
         <parameters>
         <parameter name="property" type="array" javaType="java.util.List&lt;org.apache.camel.model.PropertyDefinition&gt;" kind="element" deprecated="false" required="false" originalFieldName="property" description="A series of properties as key value pairs"/>
      </parameters>
   </eip>
</eips>
